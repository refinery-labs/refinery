{".class": "MypyFile", "_fullname": "models.saved_block_version", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "Base": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.Base", "kind": "Gdef"}, "BigInteger": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BigInteger", "kind": "Gdef"}, "Binary": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Binary", "kind": "Gdef"}, "Boolean": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Boolean", "kind": "Gdef"}, "CHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.CHAR", "kind": "Gdef"}, "Column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Column", "kind": "Gdef"}, "DatabaseBindingSpec": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.DatabaseBindingSpec", "kind": "Gdef"}, "DateTime": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DateTime", "kind": "Gdef"}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef"}, "Integer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Integer", "kind": "Gdef"}, "JSON": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.JSON", "kind": "Gdef"}, "JSONB": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.dialects.postgresql.json.JSONB", "kind": "Gdef"}, "SavedBlock": {".class": "SymbolTableNode", "cross_ref": "models.saved_block.SavedBlock", "kind": "Gdef"}, "SavedBlockVersion": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["models.initiate_database.Base"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "models.saved_block_version.SavedBlockVersion", "name": "SavedBlockVersion", "type_vars": []}, "flags": [], "fullname": "models.saved_block_version.SavedBlockVersion", "metaclass_type": null, "metadata": {}, "module_name": "models.saved_block_version", "mro": ["models.saved_block_version.SavedBlockVersion", "models.initiate_database.Base", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.saved_block_version.SavedBlockVersion.__init__", "name": "__init__", "type": null}}, "__str__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.saved_block_version.SavedBlockVersion.__str__", "name": "__str__", "type": null}}, "__tablename__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "models.saved_block_version.SavedBlockVersion.__tablename__", "name": "__tablename__", "type": "builtins.str"}}, "_block_object_json": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion._block_object_json", "name": "_block_object_json", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "block_object": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.block_object", "name": "block_object", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "block_object_json": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_property"], "fullname": "models.saved_block_version.SavedBlockVersion.block_object_json", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_overload", "is_decorated"], "fullname": "models.saved_block_version.SavedBlockVersion.block_object_json", "name": "block_object_json", "type": null}, "is_overload": true, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_settable_property", "is_ready"], "fullname": null, "name": "block_object_json", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["models.saved_block_version.SavedBlockVersion"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "block_object_json of SavedBlockVersion", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "block_json"], "flags": ["is_decorated"], "fullname": "models.saved_block_version.SavedBlockVersion.block_object_json", "name": "block_object_json", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": [], "fullname": null, "name": "block_object_json", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["models.saved_block_version.SavedBlockVersion"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "block_object_json", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}]}}}, "id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.id", "name": "id", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "saved_block_id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.saved_block_id", "name": "saved_block_id", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "shared_files": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.shared_files", "name": "shared_files", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.list"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "timestamp": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.timestamp", "name": "timestamp", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "version": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.saved_block_version.SavedBlockVersion.version", "name": "version", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "String": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.String", "kind": "Gdef"}, "SynonymProperty": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.descriptor_props.SynonymProperty", "kind": "Gdef"}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef"}, "Text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Text", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.saved_block_version.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.saved_block_version.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.saved_block_version.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.saved_block_version.__package__", "name": "__package__", "type": "builtins.str"}}, "contextmanager": {".class": "SymbolTableNode", "cross_ref": "contextlib.contextmanager", "kind": "Gdef"}, "create_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.create_engine", "kind": "Gdef"}, "create_scoped_db_session_maker": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.create_scoped_db_session_maker", "kind": "Gdef"}, "declarative_base": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.declarative.api.declarative_base", "kind": "Gdef"}, "engine_url_format": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.engine_url_format", "kind": "Gdef"}, "event": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.event", "kind": "Gdef"}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "func": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.func", "kind": "Gdef"}, "get_refinery_engine": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.get_refinery_engine", "kind": "Gdef"}, "os": {".class": "SymbolTableNode", "cross_ref": "os", "kind": "Gdef"}, "pinject": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.pinject", "kind": "Gdef"}, "relationship": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.relationship", "kind": "Gdef"}, "scoped_session": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.scoping.scoped_session", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.select", "kind": "Gdef"}, "sessionmaker": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.session.sessionmaker", "kind": "Gdef"}, "sql_or": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.or_", "kind": "Gdef"}, "synonym": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.synonym", "kind": "Gdef"}, "time": {".class": "SymbolTableNode", "cross_ref": "time", "kind": "Gdef"}, "update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.update", "kind": "Gdef"}, "uuid": {".class": "SymbolTableNode", "cross_ref": "uuid", "kind": "Gdef"}, "yaml": {".class": "SymbolTableNode", "cross_ref": "yaml", "kind": "Gdef"}}, "path": "models/saved_block_version.py"}