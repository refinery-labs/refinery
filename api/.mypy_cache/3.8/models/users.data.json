{".class": "MypyFile", "_fullname": "models.users", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Base": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.Base", "kind": "Gdef"}, "BigInteger": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BigInteger", "kind": "Gdef"}, "Binary": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Binary", "kind": "Gdef"}, "Boolean": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Boolean", "kind": "Gdef"}, "CHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.CHAR", "kind": "Gdef"}, "Column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Column", "kind": "Gdef"}, "DatabaseBindingSpec": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.DatabaseBindingSpec", "kind": "Gdef"}, "DateTime": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DateTime", "kind": "Gdef"}, "EmailAuthToken": {".class": "SymbolTableNode", "cross_ref": "models.email_auth_tokens.EmailAuthToken", "kind": "Gdef"}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef"}, "Integer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Integer", "kind": "Gdef"}, "JSON": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.JSON", "kind": "Gdef"}, "Organization": {".class": "SymbolTableNode", "cross_ref": "models.organizations.Organization", "kind": "Gdef"}, "Project": {".class": "SymbolTableNode", "cross_ref": "models.projects.Project", "kind": "Gdef"}, "StateLog": {".class": "SymbolTableNode", "cross_ref": "models.state_logs.StateLog", "kind": "Gdef"}, "String": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.String", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef"}, "Text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Text", "kind": "Gdef"}, "User": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["models.initiate_database.Base"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "models.users.User", "name": "User", "type_vars": []}, "flags": [], "fullname": "models.users.User", "metaclass_type": null, "metadata": {}, "module_name": "models.users", "mro": ["models.users.User", "models.initiate_database.Base", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.users.User.__init__", "name": "__init__", "type": null}}, "__str__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.users.User.__str__", "name": "__str__", "type": null}}, "__tablename__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "models.users.User.__tablename__", "name": "__tablename__", "type": "builtins.str"}}, "disabled": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.disabled", "name": "disabled", "type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "email": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.email", "name": "email", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "email_auth_tokens": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.email_auth_tokens", "name": "email_auth_tokens", "type": {".class": "Instance", "args": ["models.email_auth_tokens.EmailAuthToken"], "type_ref": "sqlalchemy.orm.relationships.RelationshipProperty"}}}, "email_verified": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.email_verified", "name": "email_verified", "type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "has_valid_payment_method_on_file": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.has_valid_payment_method_on_file", "name": "has_valid_payment_method_on_file", "type": {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.id", "name": "id", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.name", "name": "name", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "oauth_token_entries": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.oauth_token_entries", "name": "oauth_token_entries", "type": {".class": "Instance", "args": ["models.user_oauth_account.UserOAuthAccountModel"], "type_ref": "sqlalchemy.orm.relationships.RelationshipProperty"}}}, "organization": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.organization", "name": "organization", "type": {".class": "Instance", "args": ["models.organizations.Organization"], "type_ref": "sqlalchemy.orm.relationships.RelationshipProperty"}}}, "organization_id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.organization_id", "name": "organization_id", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "payment_id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.payment_id", "name": "payment_id", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "permission_level": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.permission_level", "name": "permission_level", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "phone_number": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.phone_number", "name": "phone_number", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "projects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.projects", "name": "projects", "type": {".class": "Instance", "args": ["models.projects.Project"], "type_ref": "sqlalchemy.orm.relationships.RelationshipProperty"}}}, "state_logs": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.state_logs", "name": "state_logs", "type": {".class": "Instance", "args": ["models.state_logs.StateLog"], "type_ref": "sqlalchemy.orm.relationships.RelationshipProperty"}}}, "timestamp": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.users.User.timestamp", "name": "timestamp", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "to_dict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.users.User.to_dict", "name": "to_dict", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "UserOAuthAccountModel": {".class": "SymbolTableNode", "cross_ref": "models.user_oauth_account.UserOAuthAccountModel", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.users.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.users.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.users.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.users.__package__", "name": "__package__", "type": "builtins.str"}}, "contextmanager": {".class": "SymbolTableNode", "cross_ref": "contextlib.contextmanager", "kind": "Gdef"}, "create_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.create_engine", "kind": "Gdef"}, "create_scoped_db_session_maker": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.create_scoped_db_session_maker", "kind": "Gdef"}, "declarative_base": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.declarative.api.declarative_base", "kind": "Gdef"}, "engine_url_format": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.engine_url_format", "kind": "Gdef"}, "event": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.event", "kind": "Gdef"}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "func": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.func", "kind": "Gdef"}, "get_refinery_engine": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.get_refinery_engine", "kind": "Gdef"}, "json": {".class": "SymbolTableNode", "cross_ref": "json", "kind": "Gdef"}, "os": {".class": "SymbolTableNode", "cross_ref": "os", "kind": "Gdef"}, "pinject": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.pinject", "kind": "Gdef"}, "relationship": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.relationship", "kind": "Gdef"}, "scoped_session": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.scoping.scoped_session", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.select", "kind": "Gdef"}, "sessionmaker": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.session.sessionmaker", "kind": "Gdef"}, "sql_or": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.or_", "kind": "Gdef"}, "synonym": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.synonym", "kind": "Gdef"}, "time": {".class": "SymbolTableNode", "cross_ref": "time", "kind": "Gdef"}, "update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.update", "kind": "Gdef"}, "users_projects_association_table": {".class": "SymbolTableNode", "cross_ref": "models.user_project_associations.users_projects_association_table", "kind": "Gdef"}, "uuid": {".class": "SymbolTableNode", "cross_ref": "uuid", "kind": "Gdef"}, "yaml": {".class": "SymbolTableNode", "cross_ref": "yaml", "kind": "Gdef"}}, "path": "models/users.py"}