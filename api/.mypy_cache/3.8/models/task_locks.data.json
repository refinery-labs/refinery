{".class": "MypyFile", "_fullname": "models.task_locks", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "AWSAccount": {".class": "SymbolTableNode", "cross_ref": "models.aws_accounts.AWSAccount", "kind": "Gdef"}, "Base": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.Base", "kind": "Gdef"}, "BigInteger": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BigInteger", "kind": "Gdef"}, "Binary": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Binary", "kind": "Gdef"}, "Boolean": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Boolean", "kind": "Gdef"}, "CHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.CHAR", "kind": "Gdef"}, "CachedBillingCollection": {".class": "SymbolTableNode", "cross_ref": "models.cached_billing_collections.CachedBillingCollection", "kind": "Gdef"}, "CachedBillingItem": {".class": "SymbolTableNode", "cross_ref": "models.cached_billing_items.CachedBillingItem", "kind": "Gdef"}, "CachedExecutionLogsShard": {".class": "SymbolTableNode", "cross_ref": "models.cached_execution_logs_shard.CachedExecutionLogsShard", "kind": "Gdef"}, "Column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Column", "kind": "Gdef"}, "DatabaseBindingSpec": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.DatabaseBindingSpec", "kind": "Gdef"}, "DateTime": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DateTime", "kind": "Gdef"}, "Deployment": {".class": "SymbolTableNode", "cross_ref": "models.deployments.Deployment", "kind": "Gdef"}, "EmailAuthToken": {".class": "SymbolTableNode", "cross_ref": "models.email_auth_tokens.EmailAuthToken", "kind": "Gdef"}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef"}, "GitRepoDataRecordsModel": {".class": "SymbolTableNode", "cross_ref": "models.git_repo_data_record.GitRepoDataRecordsModel", "kind": "Gdef"}, "GitRepoModel": {".class": "SymbolTableNode", "cross_ref": "models.git_repo.GitRepoModel", "kind": "Gdef"}, "InlineExecutionLambda": {".class": "SymbolTableNode", "cross_ref": "models.inline_execution_lambdas.InlineExecutionLambda", "kind": "Gdef"}, "Integer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Integer", "kind": "Gdef"}, "JSON": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.JSON", "kind": "Gdef"}, "Organization": {".class": "SymbolTableNode", "cross_ref": "models.organizations.Organization", "kind": "Gdef"}, "Project": {".class": "SymbolTableNode", "cross_ref": "models.projects.Project", "kind": "Gdef"}, "ProjectConfig": {".class": "SymbolTableNode", "cross_ref": "models.project_config.ProjectConfig", "kind": "Gdef"}, "ProjectShortLink": {".class": "SymbolTableNode", "cross_ref": "models.project_short_links.ProjectShortLink", "kind": "Gdef"}, "ProjectVersion": {".class": "SymbolTableNode", "cross_ref": "models.project_versions.ProjectVersion", "kind": "Gdef"}, "SavedBlock": {".class": "SymbolTableNode", "cross_ref": "models.saved_block.SavedBlock", "kind": "Gdef"}, "SavedBlockVersion": {".class": "SymbolTableNode", "cross_ref": "models.saved_block_version.SavedBlockVersion", "kind": "Gdef"}, "StateLog": {".class": "SymbolTableNode", "cross_ref": "models.state_logs.StateLog", "kind": "Gdef"}, "String": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.String", "kind": "Gdef"}, "TYPE_CHECKING": {".class": "SymbolTableNode", "cross_ref": "typing.TYPE_CHECKING", "kind": "Gdef"}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef"}, "TaskLock": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["models.initiate_database.Base"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "models.task_locks.TaskLock", "name": "TaskLock", "type_vars": []}, "flags": [], "fullname": "models.task_locks.TaskLock", "metaclass_type": null, "metadata": {}, "module_name": "models.task_locks", "mro": ["models.task_locks.TaskLock", "models.initiate_database.Base", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "task_id", "expiry", "locked"], "flags": [], "fullname": "models.task_locks.TaskLock.__init__", "name": "__init__", "type": null}}, "__str__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.task_locks.TaskLock.__str__", "name": "__str__", "type": null}}, "__tablename__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "models.task_locks.TaskLock.__tablename__", "name": "__tablename__", "type": "builtins.str"}}, "expiry": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.task_locks.TaskLock.expiry", "name": "expiry", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["datetime.datetime", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "locked": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.task_locks.TaskLock.locked", "name": "locked", "type": {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "task_id": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class"], "fullname": "models.task_locks.TaskLock.task_id", "name": "task_id", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.schema.Column"}}}, "to_dict": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "models.task_locks.TaskLock.to_dict", "name": "to_dict", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TerraformStateVersion": {".class": "SymbolTableNode", "cross_ref": "models.terraform_state_versions.TerraformStateVersion", "kind": "Gdef"}, "Text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Text", "kind": "Gdef"}, "User": {".class": "SymbolTableNode", "cross_ref": "models.users.User", "kind": "Gdef"}, "UserOAuthAccountModel": {".class": "SymbolTableNode", "cross_ref": "models.user_oauth_account.UserOAuthAccountModel", "kind": "Gdef"}, "UserOAuthDataRecordModel": {".class": "SymbolTableNode", "cross_ref": "models.user_oauth_data_record.UserOAuthDataRecordModel", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.task_locks.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.task_locks.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.task_locks.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "models.task_locks.__package__", "name": "__package__", "type": "builtins.str"}}, "contextmanager": {".class": "SymbolTableNode", "cross_ref": "contextlib.contextmanager", "kind": "Gdef"}, "create_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.create_engine", "kind": "Gdef"}, "create_scoped_db_session_maker": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.create_scoped_db_session_maker", "kind": "Gdef"}, "declarative_base": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext.declarative.api.declarative_base", "kind": "Gdef"}, "engine_url_format": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.engine_url_format", "kind": "Gdef"}, "event": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.event", "kind": "Gdef"}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "func": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.func", "kind": "Gdef"}, "get_refinery_engine": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.get_refinery_engine", "kind": "Gdef"}, "json": {".class": "SymbolTableNode", "cross_ref": "json", "kind": "Gdef"}, "os": {".class": "SymbolTableNode", "cross_ref": "os", "kind": "Gdef"}, "pinject": {".class": "SymbolTableNode", "cross_ref": "models.initiate_database.pinject", "kind": "Gdef"}, "relationship": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.relationship", "kind": "Gdef"}, "scoped_session": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.scoping.scoped_session", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.select", "kind": "Gdef"}, "sessionmaker": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.session.sessionmaker", "kind": "Gdef"}, "sql_or": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.or_", "kind": "Gdef"}, "synonym": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm.synonym", "kind": "Gdef"}, "update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.update", "kind": "Gdef"}, "users_projects_association_table": {".class": "SymbolTableNode", "cross_ref": "models.user_project_associations.users_projects_association_table", "kind": "Gdef"}, "yaml": {".class": "SymbolTableNode", "cross_ref": "yaml", "kind": "Gdef"}}, "path": "models/task_locks.py"}