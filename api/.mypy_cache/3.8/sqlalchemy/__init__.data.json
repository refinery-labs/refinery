{".class": "MypyFile", "_fullname": "sqlalchemy", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "ARRAY": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.ARRAY", "kind": "Gdef"}, "BIGINT": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BIGINT", "kind": "Gdef"}, "BINARY": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BINARY", "kind": "Gdef"}, "BLANK_SCHEMA": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.BLANK_SCHEMA", "kind": "Gdef"}, "BLOB": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BLOB", "kind": "Gdef"}, "BOOLEAN": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BOOLEAN", "kind": "Gdef"}, "BigInteger": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.BigInteger", "kind": "Gdef"}, "Binary": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Binary", "kind": "Gdef"}, "Boolean": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Boolean", "kind": "Gdef"}, "CHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.CHAR", "kind": "Gdef"}, "CLOB": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.CLOB", "kind": "Gdef"}, "CheckConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.CheckConstraint", "kind": "Gdef"}, "Column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Column", "kind": "Gdef"}, "ColumnDefault": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ColumnDefault", "kind": "Gdef"}, "Constraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Constraint", "kind": "Gdef"}, "DATE": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DATE", "kind": "Gdef"}, "DATETIME": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DATETIME", "kind": "Gdef"}, "DDL": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.ddl.DDL", "kind": "Gdef"}, "DECIMAL": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DECIMAL", "kind": "Gdef"}, "Date": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Date", "kind": "Gdef"}, "DateTime": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.DateTime", "kind": "Gdef"}, "DefaultClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.DefaultClause", "kind": "Gdef"}, "Enum": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Enum", "kind": "Gdef"}, "FLOAT": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.FLOAT", "kind": "Gdef"}, "FetchedValue": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.FetchedValue", "kind": "Gdef"}, "Float": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Float", "kind": "Gdef"}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef"}, "ForeignKeyConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKeyConstraint", "kind": "Gdef"}, "INT": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.INT", "kind": "Gdef"}, "INTEGER": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.INTEGER", "kind": "Gdef"}, "Index": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Index", "kind": "Gdef"}, "Integer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Integer", "kind": "Gdef"}, "Interval": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Interval", "kind": "Gdef"}, "JSON": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.JSON", "kind": "Gdef"}, "LargeBinary": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.LargeBinary", "kind": "Gdef"}, "MetaData": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.MetaData", "kind": "Gdef"}, "NCHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.NCHAR", "kind": "Gdef"}, "NUMERIC": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.NUMERIC", "kind": "Gdef"}, "NVARCHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.NVARCHAR", "kind": "Gdef"}, "Numeric": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Numeric", "kind": "Gdef"}, "PassiveDefault": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.PassiveDefault", "kind": "Gdef"}, "PickleType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.PickleType", "kind": "Gdef"}, "PrimaryKeyConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.PrimaryKeyConstraint", "kind": "Gdef"}, "REAL": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.REAL", "kind": "Gdef"}, "SMALLINT": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.SMALLINT", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Sequence", "kind": "Gdef"}, "SmallInteger": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.SmallInteger", "kind": "Gdef"}, "String": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.String", "kind": "Gdef"}, "TEXT": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.TEXT", "kind": "Gdef"}, "TIME": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.TIME", "kind": "Gdef"}, "TIMESTAMP": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.TIMESTAMP", "kind": "Gdef"}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef"}, "Text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Text", "kind": "Gdef"}, "ThreadLocalMetaData": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ThreadLocalMetaData", "kind": "Gdef"}, "Time": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Time", "kind": "Gdef"}, "TypeDecorator": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeDecorator", "kind": "Gdef"}, "Unicode": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Unicode", "kind": "Gdef"}, "UnicodeText": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.UnicodeText", "kind": "Gdef"}, "UniqueConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.UniqueConstraint", "kind": "Gdef"}, "VARBINARY": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.VARBINARY", "kind": "Gdef"}, "VARCHAR": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.VARCHAR", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.__package__", "name": "__package__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.alias", "kind": "Gdef"}, "all_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.all_", "kind": "Gdef"}, "and_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.and_", "kind": "Gdef"}, "any_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.any_", "kind": "Gdef"}, "asc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.asc", "kind": "Gdef"}, "between": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.between", "kind": "Gdef"}, "bindparam": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.bindparam", "kind": "Gdef"}, "case": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.case", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.cast", "kind": "Gdef"}, "collate": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.collate", "kind": "Gdef"}, "column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.column", "kind": "Gdef"}, "connectors": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.connectors", "kind": "Gdef"}, "create_engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.create_engine", "kind": "Gdef"}, "databases": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.databases", "kind": "Gdef"}, "delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.delete", "kind": "Gdef"}, "desc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.desc", "kind": "Gdef"}, "dialects": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.dialects", "kind": "Gdef"}, "distinct": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.distinct", "kind": "Gdef"}, "engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine", "kind": "Gdef"}, "engine_from_config": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.engine_from_config", "kind": "Gdef"}, "event": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.event", "kind": "Gdef"}, "events": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.events", "kind": "Gdef"}, "exc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.exc", "kind": "Gdef"}, "except_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.except_", "kind": "Gdef"}, "except_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.except_all", "kind": "Gdef"}, "exists": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.exists", "kind": "Gdef"}, "ext": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.ext", "kind": "Gdef"}, "extract": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.extract", "kind": "Gdef"}, "false": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.false", "kind": "Gdef"}, "func": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.func", "kind": "Gdef"}, "funcfilter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.funcfilter", "kind": "Gdef"}, "insert": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.insert", "kind": "Gdef"}, "inspect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.inspection.inspect", "kind": "Gdef"}, "inspection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.inspection", "kind": "Gdef"}, "interfaces": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.interfaces", "kind": "Gdef"}, "intersect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.intersect", "kind": "Gdef"}, "intersect_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.intersect_all", "kind": "Gdef"}, "join": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.join", "kind": "Gdef"}, "lateral": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.lateral", "kind": "Gdef"}, "literal": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal", "kind": "Gdef"}, "literal_column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal_column", "kind": "Gdef"}, "log": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.log", "kind": "Gdef"}, "modifier": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.modifier", "kind": "Gdef"}, "not_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.not_", "kind": "Gdef"}, "null": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.null", "kind": "Gdef"}, "or_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.or_", "kind": "Gdef"}, "orm": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.orm", "kind": "Gdef"}, "outerjoin": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.outerjoin", "kind": "Gdef"}, "outparam": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.outparam", "kind": "Gdef"}, "over": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.over", "kind": "Gdef"}, "pool": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.pool", "kind": "Gdef"}, "processors": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.processors", "kind": "Gdef"}, "schema": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.schema", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.select", "kind": "Gdef"}, "sql": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql", "kind": "Gdef"}, "subquery": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.subquery", "kind": "Gdef"}, "table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.table", "kind": "Gdef"}, "tablesample": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.tablesample", "kind": "Gdef"}, "text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.text", "kind": "Gdef"}, "true": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.true", "kind": "Gdef"}, "tuple_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.tuple_", "kind": "Gdef"}, "type_coerce": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.type_coerce", "kind": "Gdef"}, "types": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.types", "kind": "Gdef"}, "union": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.union", "kind": "Gdef"}, "union_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.union_all", "kind": "Gdef"}, "update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.update", "kind": "Gdef"}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef"}, "within_group": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.within_group", "kind": "Gdef"}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/__init__.pyi"}