{".class": "MypyFile", "_fullname": "sqlalchemy.sql", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "Alias": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.Alias", "kind": "Gdef"}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef"}, "ClauseVisitor": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors.ClauseVisitor", "kind": "Gdef"}, "ColumnCollection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ColumnCollection", "kind": "Gdef"}, "ColumnElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnElement", "kind": "Gdef"}, "CompoundSelect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.CompoundSelect", "kind": "Gdef"}, "Delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Delete", "kind": "Gdef"}, "False_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.False_", "kind": "Gdef"}, "FromClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.FromClause", "kind": "Gdef"}, "Insert": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Insert", "kind": "Gdef"}, "Join": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.Join", "kind": "Gdef"}, "Select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.Select", "kind": "Gdef"}, "Selectable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.Selectable", "kind": "Gdef"}, "TableClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.TableClause", "kind": "Gdef"}, "TableSample": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.TableSample", "kind": "Gdef"}, "True_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.True_", "kind": "Gdef"}, "Update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Update", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.__package__", "name": "__package__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.alias", "kind": "Gdef"}, "all_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.all_", "kind": "Gdef"}, "and_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.and_", "kind": "Gdef"}, "any_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.any_", "kind": "Gdef"}, "asc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.asc", "kind": "Gdef"}, "between": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.between", "kind": "Gdef"}, "bindparam": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.bindparam", "kind": "Gdef"}, "case": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.case", "kind": "Gdef"}, "cast": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.cast", "kind": "Gdef"}, "collate": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.collate", "kind": "Gdef"}, "column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.column", "kind": "Gdef"}, "delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.delete", "kind": "Gdef"}, "desc": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.desc", "kind": "Gdef"}, "distinct": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.distinct", "kind": "Gdef"}, "except_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.except_", "kind": "Gdef"}, "except_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.except_all", "kind": "Gdef"}, "exists": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.exists", "kind": "Gdef"}, "extract": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.extract", "kind": "Gdef"}, "false": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.false", "kind": "Gdef"}, "func": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.func", "kind": "Gdef"}, "funcfilter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.funcfilter", "kind": "Gdef"}, "insert": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.insert", "kind": "Gdef"}, "intersect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.intersect", "kind": "Gdef"}, "intersect_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.intersect_all", "kind": "Gdef"}, "join": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.join", "kind": "Gdef"}, "label": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.label", "kind": "Gdef"}, "lateral": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.lateral", "kind": "Gdef"}, "literal": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal", "kind": "Gdef"}, "literal_column": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.literal_column", "kind": "Gdef"}, "modifier": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.modifier", "kind": "Gdef"}, "not_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.not_", "kind": "Gdef"}, "null": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.null", "kind": "Gdef"}, "or_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.or_", "kind": "Gdef"}, "outerjoin": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.outerjoin", "kind": "Gdef"}, "outparam": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.outparam", "kind": "Gdef"}, "over": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.over", "kind": "Gdef"}, "select": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.select", "kind": "Gdef"}, "subquery": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.subquery", "kind": "Gdef"}, "table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.table", "kind": "Gdef"}, "tablesample": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.tablesample", "kind": "Gdef"}, "text": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.text", "kind": "Gdef"}, "true": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.true", "kind": "Gdef"}, "tuple_": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.tuple_", "kind": "Gdef"}, "type_coerce": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.type_coerce", "kind": "Gdef"}, "union": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.union", "kind": "Gdef"}, "union_all": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.union_all", "kind": "Gdef"}, "update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.update", "kind": "Gdef"}, "within_group": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression.within_group", "kind": "Gdef"}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/sql/__init__.pyi"}