{".class": "MypyFile", "_fullname": "sqlalchemy.sql.selectable", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "Alias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Alias", "name": "Alias", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "selectable", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "selectable", "name"], "arg_types": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.Selectable", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Alias", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias.as_scalar", "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of Alias", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Alias.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of Alias", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of Alias", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Alias.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Alias", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Alias", "ret_type": "builtins.str", "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.element", "name": "element", "type": "sqlalchemy.sql.selectable.Selectable"}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kw"], "arg_types": ["sqlalchemy.sql.selectable.Alias", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Alias", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.selectable.Selectable"]}], "type_ref": "typing.Iterable"}, "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of Alias", "ret_type": "builtins.bool", "variables": []}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.name", "name": "name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "original": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.original", "name": "original", "type": "sqlalchemy.sql.selectable.Selectable"}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Alias.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._A", "id": -1, "name": "_A", "upper_bound": "sqlalchemy.sql.selectable.Alias", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Alias", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._A", "id": -1, "name": "_A", "upper_bound": "sqlalchemy.sql.selectable.Alias", "values": [], "variance": 0}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._A", "id": -1, "name": "_A", "upper_bound": "sqlalchemy.sql.selectable.Alias", "values": [], "variance": 0}]}}}, "supports_execution": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Alias.supports_execution", "name": "supports_execution", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Annotated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.Annotated", "kind": "Gdef"}, "AnnotatedFromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "sqlalchemy.sql.annotation.Annotated"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "name": "AnnotatedFromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.AnnotatedFromClause", "sqlalchemy.sql.annotation.Annotated", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "flags": [], "fullname": "sqlalchemy.sql.selectable.AnnotatedFromClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "arg_types": ["sqlalchemy.sql.selectable.AnnotatedFromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AnnotatedFromClause", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "BindParameter": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.BindParameter", "kind": "Gdef", "module_hidden": true, "module_public": false}, "CTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.Alias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CTE", "name": "CTE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "selectable", "name", "recursive", "_cte_alias", "_restates", "_suffixes"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "selectable", "name", "recursive", "_cte_alias", "_restates", "_suffixes"], "arg_types": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.selectable.Select", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CTE", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.CTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}, "recursive": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CTE.recursive", "name": "recursive", "type": "builtins.bool"}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union", "name": "union", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CTE.union_all", "name": "union_all", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.selectable.CTE", "sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union_all of CTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef"}, "ColumnClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnClause", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ColumnElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnElement", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ColumnSet": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ColumnSet", "kind": "Gdef", "module_hidden": true, "module_public": false}, "CompoundSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.GenerativeSelect"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "name": "CompoundSelect", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "EXCEPT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.EXCEPT", "name": "EXCEPT", "type": "sqlalchemy.util.langhelpers.symbol"}}, "EXCEPT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.EXCEPT_ALL", "name": "EXCEPT_ALL", "type": "sqlalchemy.util.langhelpers.symbol"}}, "INTERSECT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.INTERSECT", "name": "INTERSECT", "type": "sqlalchemy.util.langhelpers.symbol"}}, "INTERSECT_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.INTERSECT_ALL", "name": "INTERSECT_ALL", "type": "sqlalchemy.util.langhelpers.symbol"}}, "UNION": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.UNION", "name": "UNION", "type": "sqlalchemy.util.langhelpers.symbol"}}, "UNION_ALL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.UNION_ALL", "name": "UNION_ALL", "type": "sqlalchemy.util.langhelpers.symbol"}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "keyword", "selects", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "keyword", "selects", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.util.langhelpers.symbol", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CompoundSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_create_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_except", "name": "_create_except", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_except", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_except_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_except_all", "name": "_create_except_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_except_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_except_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_intersect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_intersect", "name": "_create_intersect", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_intersect", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_intersect_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_intersect_all", "name": "_create_intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_intersect_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_union", "name": "_create_union", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_union", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "_create_union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect._create_union_all", "name": "_create_union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_union_all", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["cls", "selects", "kwargs"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.CompoundSelect"}, "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_union_all of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of CompoundSelect", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of CompoundSelect", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.selectable.Selectable"]}], "type_ref": "builtins.list"}, "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of CompoundSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "keyword": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.keyword", "name": "keyword", "type": "sqlalchemy.util.langhelpers.symbol"}}, "selects": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.selects", "name": "selects", "type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.Selectable"], "type_ref": "builtins.list"}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.CompoundSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.CompoundSelect", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of CompoundSelect", "ret_type": "sqlalchemy.sql.selectable.FromGrouping", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Connection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Connection", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Delete": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Delete", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef"}, "Exists": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Exists", "name": "Exists", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "args", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.Select", "builtins.str"]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Exists", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Exists.__visit_name__", "name": "__visit_name__", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of Exists", "ret_type": "sqlalchemy.sql.selectable.Exists", "variables": []}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Exists", "ret_type": "sqlalchemy.sql.selectable.Exists", "variables": []}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "arg_types": ["sqlalchemy.sql.selectable.Exists", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of Exists", "ret_type": "sqlalchemy.sql.selectable.Select", "variables": []}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.select_from", "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_from of Exists", "ret_type": "sqlalchemy.sql.selectable.Exists", "variables": []}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Exists.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.Exists", "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of Exists", "ret_type": "sqlalchemy.sql.selectable.Exists", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForUpdateArg": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "name": "ForUpdateArg", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ForUpdateArg", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ForUpdateArg", "ret_type": {".class": "NoneType"}, "variables": []}}}, "key_share": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.key_share", "name": "key_share", "type": "builtins.bool"}}, "legacy_for_update_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.legacy_for_update_value", "name": "legacy_for_update_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "legacy_for_update_value of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["builtins.str", "builtins.bool"]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "legacy_for_update_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.ForUpdateArg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "legacy_for_update_value of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["builtins.str", "builtins.bool"]}, "variables": []}}}}, "nowait": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.nowait", "name": "nowait", "type": "builtins.bool"}}, "of": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.of", "name": "of", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "parse_legacy_select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.parse_legacy_select", "name": "parse_legacy_select", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.ForUpdateArg"}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "parse_legacy_select of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "parse_legacy_select", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.selectable.ForUpdateArg"}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "parse_legacy_select of ForUpdateArg", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.ForUpdateArg", {".class": "NoneType"}]}, "variables": []}}}}, "read": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.read", "name": "read", "type": "builtins.bool"}}, "skip_locked": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ForUpdateArg.skip_locked", "name": "skip_locked", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef", "module_hidden": true, "module_public": false}, "FromClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.Selectable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromClause", "name": "FromClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of FromClause", "ret_type": "sqlalchemy.sql.selectable.Alias", "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.c", "name": "c", "type": "sqlalchemy.sql.base.ImmutableColumnCollection"}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromClause", "ret_type": "sqlalchemy.sql.base.ImmutableColumnCollection", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromClause", "ret_type": "sqlalchemy.sql.base.ImmutableColumnCollection", "variables": []}}}}, "correspond_on_equivalents": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "equivalents"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.correspond_on_equivalents", "name": "correspond_on_equivalents", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "column", "equivalents"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Mapping"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correspond_on_equivalents of FromClause", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "NoneType"}]}, "variables": []}}}, "corresponding_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.corresponding_column", "name": "corresponding_column", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "column", "require_embedded"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "corresponding_column of FromClause", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}, "count": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.count", "name": "count", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "count of FromClause", "ret_type": "sqlalchemy.sql.selectable.Select", "variables": []}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of FromClause", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of FromClause", "ret_type": "builtins.str", "variables": []}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.set"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromClause", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.set"}, "variables": []}}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of FromClause", "ret_type": "builtins.bool", "variables": []}}}, "join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.join", "name": "join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "join of FromClause", "ret_type": "sqlalchemy.sql.selectable.Join", "variables": []}}}, "lateral": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral of FromClause", "ret_type": "sqlalchemy.sql.selectable.Lateral", "variables": []}}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.outerjoin", "name": "outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "right", "onclause", "full"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "outerjoin of FromClause", "ret_type": "sqlalchemy.sql.selectable.Join", "variables": []}}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromClause.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromClause", "ret_type": "sqlalchemy.sql.base.ColumnSet", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromClause", "ret_type": "sqlalchemy.sql.base.ColumnSet", "variables": []}}}}, "replace_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.replace_selectable", "name": "replace_selectable", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "old", "alias"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Alias"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "replace_selectable of FromClause", "ret_type": "sqlalchemy.sql.selectable.FromClause", "variables": []}}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromClause.schema", "name": "schema", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "params"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of FromClause", "ret_type": "sqlalchemy.sql.selectable.Select", "variables": []}}}, "tablesample": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromClause.tablesample", "name": "tablesample", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "sampling", "name", "seed"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "tablesample of FromClause", "ret_type": "sqlalchemy.sql.selectable.TableSample", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FromGrouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.FromGrouping", "name": "FromGrouping", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__getattr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "attr"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__getattr__", "name": "__getattr__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__getattr__ of FromGrouping", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FromGrouping", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of FromGrouping", "ret_type": "sqlalchemy.sql.selectable.FromGrouping", "variables": []}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromGrouping", "ret_type": "sqlalchemy.sql.base.ImmutableColumnCollection", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of FromGrouping", "ret_type": "sqlalchemy.sql.base.ImmutableColumnCollection", "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.element", "name": "element", "type": "sqlalchemy.sql.selectable.FromClause"}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.set"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of FromGrouping", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.set"}, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of FromGrouping", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.selectable.FromClause"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.FromGrouping.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of FromGrouping", "ret_type": "builtins.bool", "variables": []}}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.FromGrouping.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromGrouping", "ret_type": "sqlalchemy.sql.base.ColumnSet", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.FromGrouping"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of FromGrouping", "ret_type": "sqlalchemy.sql.base.ColumnSet", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Function": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.Function", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Generative": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Generative", "kind": "Gdef"}, "GenerativeSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "name": "GenerativeSelect", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "use_labels", "for_update", "limit", "offset", "order_by", "group_by", "bind", "autocommit"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "use_labels", "for_update", "limit", "offset", "order_by", "group_by", "bind", "autocommit"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of GenerativeSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_group_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.append_group_by", "name": "append_group_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_group_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "append_order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.append_order_by", "name": "append_order_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": ["sqlalchemy.sql.selectable.GenerativeSelect", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_order_by of GenerativeSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "apply_labels": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.apply_labels", "name": "apply_labels", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "apply_labels of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}, "for_update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.for_update", "name": "for_update", "type": {".class": "UnionType", "items": ["builtins.str", "builtins.bool"]}}}, "group_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.group_by", "name": "group_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "group_by of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}, "limit": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.limit", "name": "limit", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "limit"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "limit of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}, "offset": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.offset", "name": "offset", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "offset"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "offset of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}, "order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.order_by", "name": "order_by", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "clauses"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "order_by of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}, "use_labels": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.use_labels", "name": "use_labels", "type": "builtins.bool"}}, "with_for_update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "flags": [], "fullname": "sqlalchemy.sql.selectable.GenerativeSelect.with_for_update", "name": "with_for_update", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "nowait", "read", "of", "skip_locked", "key_share"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "typing.Sequence"}, "sqlalchemy.sql.selectable.TableClause", {".class": "Instance", "args": ["sqlalchemy.sql.selectable.TableClause"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_for_update of GenerativeSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._GS", "id": -1, "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Grouping": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.Grouping", "kind": "Gdef"}, "HasCTE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasCTE", "name": "HasCTE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasCTE", "builtins.object"], "names": {".class": "SymbolTable", "cte": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "recursive"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasCTE.cte", "name": "cte", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "recursive"], "arg_types": ["sqlalchemy.sql.selectable.HasCTE", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cte of HasCTE", "ret_type": "sqlalchemy.sql.selectable.CTE", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasPrefixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "name": "HasPrefixes", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasPrefixes", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasPrefixes", "builtins.object"], "names": {".class": "SymbolTable", "prefix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasPrefixes.prefix_with", "name": "prefix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._HP", "id": -1, "name": "_HP", "upper_bound": "sqlalchemy.sql.selectable.HasPrefixes", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "sqlalchemy.sql.elements.ClauseElement"]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "prefix_with of HasPrefixes", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._HP", "id": -1, "name": "_HP", "upper_bound": "sqlalchemy.sql.selectable.HasPrefixes", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._HP", "id": -1, "name": "_HP", "upper_bound": "sqlalchemy.sql.selectable.HasPrefixes", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "HasSuffixes": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "name": "HasSuffixes", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.HasSuffixes", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.HasSuffixes", "builtins.object"], "names": {".class": "SymbolTable", "suffix_with": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "flags": [], "fullname": "sqlalchemy.sql.selectable.HasSuffixes.suffix_with", "name": "suffix_with", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "expr", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._HS", "id": -1, "name": "_HS", "upper_bound": "sqlalchemy.sql.selectable.HasSuffixes", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "sqlalchemy.sql.elements.ClauseElement"]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "suffix_with of HasSuffixes", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._HS", "id": -1, "name": "_HS", "upper_bound": "sqlalchemy.sql.selectable.HasSuffixes", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._HS", "id": -1, "name": "_HS", "upper_bound": "sqlalchemy.sql.selectable.HasSuffixes", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Immutable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Immutable", "kind": "Gdef"}, "ImmutableColumnCollection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.ImmutableColumnCollection", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Insert": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Insert", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Iterable": {".class": "SymbolTableNode", "cross_ref": "typing.Iterable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Join": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Join", "name": "Join", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Join", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "onclause", "isouter", "full"], "arg_types": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Join", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_create_join": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "isouter", "full"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._create_join", "name": "_create_join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "isouter", "full"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_join of Join", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_join", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "isouter", "full"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_join of Join", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}]}}}}, "_create_outerjoin": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "full"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join._create_outerjoin", "name": "_create_outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "full"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_outerjoin of Join", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_outerjoin", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["cls", "left", "right", "onclause", "full"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}}, "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_outerjoin of Join", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._J", "id": -1, "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}]}}}}, "alias": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias of Join", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.Join"]}, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of Join", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of Join", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Join.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Join", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Join"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of Join", "ret_type": "builtins.str", "variables": []}}}}, "full": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.full", "name": "full", "type": "builtins.bool"}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Join", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.elements.ClauseElement"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Join", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of Join", "ret_type": "builtins.bool", "variables": []}}}, "isouter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.isouter", "name": "isouter", "type": "builtins.bool"}}, "left": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.left", "name": "left", "type": "sqlalchemy.sql.selectable.FromClause"}}, "onclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.onclause", "name": "onclause", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "right": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Join.right", "name": "right", "type": "sqlalchemy.sql.selectable.FromClause"}}, "select": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.select", "name": "select", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select of Join", "ret_type": "sqlalchemy.sql.selectable.Select", "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Join.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.selectable.Join", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Join", "ret_type": "sqlalchemy.sql.selectable.FromGrouping", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Label": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.Label", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Lateral": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.Alias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Lateral", "name": "Lateral", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Lateral", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Lateral", "sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Lateral.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Mapping": {".class": "SymbolTableNode", "cross_ref": "typing.Mapping", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ScalarSelect": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Generative", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "name": "ScalarSelect", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.ScalarSelect", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.Grouping", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ScalarSelect", "ret_type": {".class": "NoneType"}, "variables": []}}}, "c": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.c", "name": "c", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.columns", "name": "columns", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "columns of ScalarSelect", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.element", "name": "element", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ScalarSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "flags": [], "fullname": "sqlalchemy.sql.selectable.ScalarSelect.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "crit"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of ScalarSelect", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SS", "id": -1, "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Select": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.GenerativeSelect"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Select", "name": "Select", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Select", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.selectable.HasSuffixes", "sqlalchemy.sql.selectable.GenerativeSelect", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], "arg_names": ["self", "columns", "whereclause", "from_obj", "group_by", "having", "order_by", "distinct", "correlate", "limit", "offset", "use_labels", "autocommit", "bind", "prefixes", "suffixes", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4], "arg_names": ["self", "columns", "whereclause", "from_obj", "group_by", "having", "order_by", "distinct", "correlate", "limit", "offset", "use_labels", "autocommit", "bind", "prefixes", "suffixes", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "sqlalchemy.sql.selectable.FromClause", "builtins.int"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", "sqlalchemy.sql.selectable.Selectable", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", "sqlalchemy.sql.selectable.Selectable"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable", {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.str", "sqlalchemy.sql.visitors.Visitable"]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection"]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Select.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "append_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_column", "name": "append_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_column of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_correlation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_correlation", "name": "append_correlation", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_correlation of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_from", "name": "append_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_from of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_having": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_having", "name": "append_having", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_having of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_prefix": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_prefix", "name": "append_prefix", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_prefix of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "append_whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.append_whereclause", "name": "append_whereclause", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "arg_types": ["sqlalchemy.sql.selectable.Select", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_whereclause of Select", "ret_type": {".class": "NoneType"}, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of Select", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}}, "column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.column", "name": "column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "column"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "column of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "correlate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.correlate", "name": "correlate", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "correlate_except": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.correlate_except", "name": "correlate_except", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "fromclauses"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "correlate_except of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "distinct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.distinct", "name": "distinct", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "expr"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "distinct of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "except_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_", "name": "except_", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "except_ of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "except_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.except_all", "name": "except_all", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "except_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.froms", "name": "froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "builtins.list"}, "variables": []}}}, "having": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.having", "name": "having", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "having"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "having of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "inner_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.inner_columns", "name": "inner_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "inner_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Iterable"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "inner_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "inner_columns of Select", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Iterable"}, "variables": []}}}}, "intersect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect", "name": "intersect", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "intersect of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "intersect_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.intersect_all", "name": "intersect_all", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "intersect_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "is_derived_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.is_derived_from", "name": "is_derived_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "is_derived_from of Select", "ret_type": "builtins.bool", "variables": []}}}, "locate_all_froms": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.locate_all_froms", "name": "locate_all_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "locate_all_froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "locate_all_froms", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "locate_all_froms of Select", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.selectable.FromClause"], "type_ref": "builtins.list"}, "variables": []}}}}, "reduce_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.reduce_columns", "name": "reduce_columns", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "only_synonyms"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "reduce_columns of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "select_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.select_from", "name": "select_from", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "fromclause"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "sqlalchemy.sql.selectable.FromClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "select_from of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Select", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "sqlalchemy.sql.selectable.FromGrouping"]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Select.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.Select"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Select", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "union": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union", "name": "union", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "union_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.union_all", "name": "union_all", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.Select", "sqlalchemy.sql.selectable.Selectable", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "union_all of Select", "ret_type": "sqlalchemy.sql.selectable.CompoundSelect", "variables": []}}}, "where": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.where", "name": "where", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "whereclause"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable"]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "where of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "with_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.with_hint", "name": "with_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "selectable", "text", "dialect_name"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "UnionType", "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.selectable.Alias"]}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_hint of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "with_only_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.with_only_columns", "name": "with_only_columns", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "columns"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "typing.Iterable"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_only_columns of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}, "with_statement_hint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.Select.with_statement_hint", "name": "with_statement_hint", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "dialect_name"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "with_statement_hint of Select", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SE", "id": -1, "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SelectBase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.SelectBase", "name": "SelectBase", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "as_scalar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.as_scalar", "name": "as_scalar", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "as_scalar of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "variables": []}}}, "autocommit": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.autocommit", "name": "autocommit", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": -1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "autocommit of SelectBase", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._SB", "id": -1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._SB", "id": -1, "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}]}}}, "label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.SelectBase.label", "name": "label", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "arg_types": ["sqlalchemy.sql.selectable.SelectBase", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "label of SelectBase", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Label"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Selectable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.Selectable", "name": "Selectable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.Selectable", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Selectable.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.Selectable.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.Selectable.selectable", "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of Selectable", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of Selectable", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._S", "id": -1, "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}]}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Set": {".class": "SymbolTableNode", "cross_ref": "typing.Set", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TableClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.FromClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableClause", "name": "TableClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableClause", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2], "arg_names": ["self", "name", "columns"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2], "arg_names": ["self", "name", "columns"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TableClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "append_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "c"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.append_column", "name": "append_column", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "c"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append_column of TableClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "delete": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.delete", "name": "delete", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "whereclause", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "delete of TableClause", "ret_type": "sqlalchemy.sql.dml.Delete", "variables": []}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.selectable.TableClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of TableClause", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.selectable.TableClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of TableClause", "ret_type": "builtins.str", "variables": []}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.foreign_keys", "name": "foreign_keys", "type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.set"}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 1, 4], "arg_names": ["self", "column_collections", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of TableClause", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "type_ref": "builtins.list"}, "variables": []}}}, "implicit_returning": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.implicit_returning", "name": "implicit_returning", "type": "builtins.bool"}}, "insert": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "values", "inline", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.insert", "name": "insert", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "values", "inline", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}]}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "insert of TableClause", "ret_type": "sqlalchemy.sql.dml.Insert", "variables": []}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.name", "name": "name", "type": "builtins.str"}}, "named_with_column": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.named_with_column", "name": "named_with_column", "type": "builtins.bool"}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableClause.primary_key", "name": "primary_key", "type": "sqlalchemy.sql.base.ColumnSet"}}, "update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "whereclause", "values", "inline", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableClause.update", "name": "update", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "whereclause", "values", "inline", "kwargs"], "arg_types": ["sqlalchemy.sql.selectable.TableClause", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "typing.Sequence"}]}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "update of TableClause", "ret_type": "sqlalchemy.sql.dml.Update", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableSample": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.Alias"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TableSample", "name": "TableSample", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TableSample", "sqlalchemy.sql.selectable.Alias", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "selectable", "sampling", "name", "seed"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TableSample.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "selectable", "sampling", "name", "seed"], "arg_types": ["sqlalchemy.sql.selectable.TableSample", "sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": ["builtins.float", {".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.functions.Function"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TableSample", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "sampling": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.sampling", "name": "sampling", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "seed": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TableSample.seed", "name": "seed", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TextAsFrom": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.selectable.SelectBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.selectable.TextAsFrom", "name": "TextAsFrom", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.selectable.TextAsFrom", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.selectable", "mro": ["sqlalchemy.sql.selectable.TextAsFrom", "sqlalchemy.sql.selectable.SelectBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.selectable.FromClause", "sqlalchemy.sql.selectable.Selectable", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "text", "columns", "positional"], "arg_types": ["sqlalchemy.sql.selectable.TextAsFrom", "sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TextAsFrom", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bindparams": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "flags": [], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.bindparams", "name": "bindparams", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "bind_as_values"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._TAF", "id": -1, "name": "_TAF", "upper_bound": "sqlalchemy.sql.selectable.TextAsFrom", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bindparams of TextAsFrom", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.selectable._TAF", "id": -1, "name": "_TAF", "upper_bound": "sqlalchemy.sql.selectable.TextAsFrom", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.selectable._TAF", "id": -1, "name": "_TAF", "upper_bound": "sqlalchemy.sql.selectable.TextAsFrom", "values": [], "variance": 0}]}}}, "column_args": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.column_args", "name": "column_args", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.element", "name": "element", "type": "sqlalchemy.sql.elements.TextClause"}}, "positional": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.selectable.TextAsFrom.positional", "name": "positional", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TextClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.TextClause", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef", "module_hidden": true, "module_public": false}, "UnaryExpression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.UnaryExpression", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Update": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Update", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Visitable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors.Visitable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "_A": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._A", "name": "_A", "upper_bound": "sqlalchemy.sql.selectable.Alias", "values": [], "variance": 0}}, "_GS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._GS", "name": "_GS", "upper_bound": "sqlalchemy.sql.selectable.GenerativeSelect", "values": [], "variance": 0}}, "_HP": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._HP", "name": "_HP", "upper_bound": "sqlalchemy.sql.selectable.HasPrefixes", "values": [], "variance": 0}}, "_HS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._HS", "name": "_HS", "upper_bound": "sqlalchemy.sql.selectable.HasSuffixes", "values": [], "variance": 0}}, "_J": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._J", "name": "_J", "upper_bound": "sqlalchemy.sql.selectable.Join", "values": [], "variance": 0}}, "_S": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._S", "name": "_S", "upper_bound": "sqlalchemy.sql.selectable.Selectable", "values": [], "variance": 0}}, "_SB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._SB", "name": "_SB", "upper_bound": "sqlalchemy.sql.selectable.SelectBase", "values": [], "variance": 0}}, "_SE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._SE", "name": "_SE", "upper_bound": "sqlalchemy.sql.selectable.Select", "values": [], "variance": 0}}, "_SS": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._SS", "name": "_SS", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.selectable.ScalarSelect"}, "values": [], "variance": 0}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._T", "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "_TAF": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.selectable._TAF", "name": "_TAF", "upper_bound": "sqlalchemy.sql.selectable.TextAsFrom", "values": [], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.selectable.__package__", "name": "__package__", "type": "builtins.str"}}, "alias": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["selectable", "name", "flat"], "flags": [], "fullname": "sqlalchemy.sql.selectable.alias", "name": "alias", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["selectable", "name", "flat"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "alias", "ret_type": "sqlalchemy.sql.selectable.Alias", "variables": []}}}, "lateral": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["selectable", "name"], "flags": [], "fullname": "sqlalchemy.sql.selectable.lateral", "name": "lateral", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["selectable", "name"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "lateral", "ret_type": "sqlalchemy.sql.selectable.Lateral", "variables": []}}}, "subquery": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["alias", "args", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.selectable.subquery", "name": "subquery", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["alias", "args", "kwargs"], "arg_types": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "subquery", "ret_type": "sqlalchemy.sql.selectable.Alias", "variables": []}}}, "tablesample": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["selectable", "sampling", "name", "seed"], "flags": [], "fullname": "sqlalchemy.sql.selectable.tablesample", "name": "tablesample", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["selectable", "sampling", "name", "seed"], "arg_types": ["sqlalchemy.sql.selectable.FromClause", "builtins.float", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "tablesample", "ret_type": "sqlalchemy.sql.selectable.TableSample", "variables": []}}}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef", "module_public": false}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/sql/selectable.pyi"}