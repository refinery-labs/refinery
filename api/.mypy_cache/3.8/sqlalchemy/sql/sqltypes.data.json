{".class": "MypyFile", "_fullname": "sqlalchemy.sql.sqltypes", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "ARRAY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.sqltypes.Concatenable", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "builtins.list"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.ARRAY", "name": "ARRAY", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.ARRAY", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "as_tuple": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.as_tuple", "name": "as_tuple", "type": "builtins.bool"}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "compare_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.compare_values", "name": "compare_values", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare_values of ARRAY", "ret_type": "builtins.bool", "variables": []}}}, "dimensions": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.dimensions", "name": "dimensions", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "hashable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.hashable", "name": "hashable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "hashable of ARRAY", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "hashable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "hashable of ARRAY", "ret_type": "builtins.bool", "variables": []}}}}, "item_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.item_type", "name": "item_type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of ARRAY", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "builtins.list"}}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of ARRAY", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "builtins.list"}}, "variables": []}}}}, "zero_indexes": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.ARRAY.zero_indexes", "name": "zero_indexes", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "BIGINT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.BigInteger"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BIGINT", "name": "BIGINT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BIGINT", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BIGINT", "sqlalchemy.sql.sqltypes.BigInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BIGINT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BINARY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BINARY", "name": "BINARY", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BINARY", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BINARY", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BINARY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BLOB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.LargeBinary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BLOB", "name": "BLOB", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BLOB", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BLOB", "sqlalchemy.sql.sqltypes.LargeBinary", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BLOB.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BOOLEAN": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Boolean"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN", "name": "BOOLEAN", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BOOLEAN", "sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BOOLEAN.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BOOLEANTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BOOLEANTYPE", "name": "BOOLEANTYPE", "type": "sqlalchemy.sql.sqltypes.Boolean"}}, "BigInteger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.BigInteger", "name": "BigInteger", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.BigInteger", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.BigInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.BigInteger.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Binary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.LargeBinary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Binary", "name": "Binary", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Binary", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Binary", "sqlalchemy.sql.sqltypes.LargeBinary", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Binary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "arg_types": ["sqlalchemy.sql.sqltypes.Binary", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Binary", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Boolean": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.Emulated", {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "sqlalchemy.sql.sqltypes.SchemaType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Boolean", "name": "Boolean", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "create_constraint", "name", "_create_events"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "create_constraint", "name", "_create_events"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", "builtins.bool", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Boolean", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of Boolean", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.bool", "builtins.int", {".class": "NoneType"}]}, "variables": []}, "variables": []}}}, "create_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.create_constraint", "name": "create_constraint", "type": "builtins.bool"}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of Boolean", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.name", "name": "name", "type": "builtins.str"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Boolean.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Boolean", "ret_type": {".class": "TypeType", "item": "builtins.bool"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Boolean", "ret_type": {".class": "TypeType", "item": "builtins.bool"}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Boolean.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Boolean", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.CHAR", "name": "CHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.CHAR", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.CHAR", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.CHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CLOB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.CLOB", "name": "CLOB", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.CLOB", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.CLOB", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.CLOB.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Concatenable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Concatenable", "name": "Concatenable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Concatenable", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Concatenable", "builtins.object"], "names": {".class": "SymbolTable", "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Concatenable.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Connectable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Connectable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Connection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Connection", "kind": "Gdef", "module_hidden": true, "module_public": false}, "DATE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Date"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DATE", "name": "DATE", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DATE", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DATE", "sqlalchemy.sql.sqltypes.Date", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DATE.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DATETIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.DateTime"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DATETIME", "name": "DATETIME", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DATETIME", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DATETIME", "sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DATETIME.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DECIMAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Numeric"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DECIMAL", "name": "DECIMAL", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DECIMAL", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DECIMAL", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DECIMAL.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Date": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": ["datetime.date"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Date", "name": "Date", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Date", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Date", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Date.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Date.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.Date", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of Date", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Date.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Date"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Date", "ret_type": {".class": "TypeType", "item": "datetime.date"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Date"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Date", "ret_type": {".class": "TypeType", "item": "datetime.date"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DateTime": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": ["datetime.datetime"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.DateTime", "name": "DateTime", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DateTime", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DateTime.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.DateTime.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of DateTime", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.DateTime.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of DateTime", "ret_type": {".class": "TypeType", "item": "datetime.datetime"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.DateTime"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of DateTime", "ret_type": {".class": "TypeType", "item": "datetime.datetime"}, "variables": []}}}}, "timezone": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.DateTime.timezone", "name": "timezone", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Dialect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Dialect", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Emulated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.Emulated", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Enum": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.SchemaType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Enum", "name": "Enum", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Enum", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "enums", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "enums", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Enum", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "adapt": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.adapt", "name": "adapt", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "adapt_to_emulated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.adapt_to_emulated", "name": "adapt_to_emulated", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt_to_emulated of Enum", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "copy": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.copy", "name": "copy", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._E", "id": -1, "name": "_E", "upper_bound": "sqlalchemy.sql.sqltypes.Enum", "values": [], "variance": 0}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "copy of Enum", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._E", "id": -1, "name": "_E", "upper_bound": "sqlalchemy.sql.sqltypes.Enum", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._E", "id": -1, "name": "_E", "upper_bound": "sqlalchemy.sql.sqltypes.Enum", "values": [], "variance": 0}]}}}, "create_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.create_constraint", "name": "create_constraint", "type": "builtins.bool"}}, "enums": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.enums", "name": "enums", "type": {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.list"}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "native": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum.native", "name": "native", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "native of Enum", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "native", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "native of Enum", "ret_type": "builtins.bool", "variables": []}}}}, "native_enum": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.native_enum", "name": "native_enum", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Enum.python_type", "name": "python_type", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "python_type of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Enum.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Enum", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Enum", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "validate_strings": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Enum.validate_strings", "name": "validate_strings", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FLOAT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Float"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.FLOAT", "name": "FLOAT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.FLOAT", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.FLOAT", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.FLOAT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Float": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Numeric"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Float", "name": "Float", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 4], "arg_names": ["self", "precision", "asdecimal", "decimal_return_scale", "kwargs"], "arg_types": ["sqlalchemy.sql.sqltypes.Float", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "asdecimal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.asdecimal", "name": "asdecimal", "type": "builtins.bool"}}, "decimal_return_scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.decimal_return_scale", "name": "decimal_return_scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "precision": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.precision", "name": "precision", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Float.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Float", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Float", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.float", "decimal.Decimal", {".class": "NoneType"}]}, "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Float.scale", "name": "scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "INT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.sqltypes.INT", "line": 305, "no_args": true, "normalized": false, "target": "sqlalchemy.sql.sqltypes.INTEGER"}}, "INTEGER": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.INTEGER", "name": "INTEGER", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.INTEGER", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.INTEGER", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.INTEGER.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "INTEGERTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.INTEGERTYPE", "name": "INTEGERTYPE", "type": "sqlalchemy.sql.sqltypes.Integer"}}, "IO": {".class": "SymbolTableNode", "cross_ref": "typing.IO", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Indexable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Indexable", "name": "Indexable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Indexable", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Indexable", "builtins.object"], "names": {".class": "SymbolTable", "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Indexable.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Integer": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Integer", "name": "Integer", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Integer.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer.get_dbapi_type", "name": "get_dbapi_type", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Integer.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of Integer", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["builtins.int"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Integer.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Integer", "ret_type": {".class": "TypeType", "item": "builtins.int"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Integer", "ret_type": {".class": "TypeType", "item": "builtins.int"}, "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Interval": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.type_api.Emulated", {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.sqltypes._AbstractInterval"}, {".class": "Instance", "args": ["datetime.timedelta"], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Interval", "name": "Interval", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.sqltypes._AbstractInterval", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "native", "second_precision", "day_precision"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "native", "second_precision", "day_precision"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "builtins.bool", {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Interval", "ret_type": {".class": "NoneType"}, "variables": []}}}, "adapt_to_emulated": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.adapt_to_emulated", "name": "adapt_to_emulated", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "impltype", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt_to_emulated of Interval", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of Interval", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["datetime.timedelta", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "day_precision": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Interval.day_precision", "name": "day_precision", "type": {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}}}, "epoch": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Interval.epoch", "name": "epoch", "type": "datetime.datetime"}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Interval.impl", "name": "impl", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "native": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Interval.native", "name": "native", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Interval.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Interval", "ret_type": {".class": "TypeType", "item": "datetime.timedelta"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Interval", "ret_type": {".class": "TypeType", "item": "datetime.timedelta"}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Interval.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Interval", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Interval", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["datetime.timedelta", {".class": "NoneType"}]}, "variables": []}, "variables": []}}}, "second_precision": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Interval.second_precision", "name": "second_precision", "type": {".class": "UnionType", "items": ["builtins.float", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSON": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Indexable", {".class": "Instance", "args": [{".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.sqltypes._JSONT"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON", "name": "JSON", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "JSONElementType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.int", "builtins.str"]}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "name": "JSONElementType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.bind_processor", "name": "bind_processor", "type": null}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.literal_processor", "name": "literal_processor", "type": null}}, "string_bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.string_bind_processor", "name": "string_bind_processor", "type": null}}, "string_literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONElementType.string_literal_processor", "name": "string_literal_processor", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONIndexType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "name": "JSONIndexType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONIndexType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "JSONPathType": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.JSON.JSONElementType"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONPathType", "name": "JSONPathType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.JSONPathType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.JSON.JSONPathType", "sqlalchemy.sql.sqltypes.JSON.JSONElementType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NULL": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.NULL", "name": "NULL", "type": "sqlalchemy.util.langhelpers.symbol"}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "none_as_null"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "none_as_null"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of JSON", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of JSON", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "variables": []}, "variables": []}}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "hashable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.hashable", "name": "hashable", "type": "builtins.bool"}}, "none_as_null": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.JSON.none_as_null", "name": "none_as_null", "type": "builtins.bool"}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of JSON", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of JSON", "ret_type": {".class": "TypeType", "item": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.JSON.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of JSON", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}, "variables": []}, "variables": []}}}, "should_evaluate_none": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.JSON.should_evaluate_none", "name": "should_evaluate_none", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "should_evaluate_none of JSON", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "should_evaluate_none", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.JSON"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "should_evaluate_none of JSON", "ret_type": "builtins.bool", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LargeBinary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.LargeBinary", "name": "LargeBinary", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.LargeBinary", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "arg_types": ["sqlalchemy.sql.sqltypes.LargeBinary", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LargeBinary", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.LargeBinary.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef", "module_hidden": true, "module_public": false}, "MATCHTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.MATCHTYPE", "name": "MATCHTYPE", "type": "sqlalchemy.sql.sqltypes.MatchType"}}, "MatchType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Boolean"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.MatchType", "name": "MatchType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.MatchType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.MatchType", "sqlalchemy.sql.sqltypes.Boolean", "sqlalchemy.sql.type_api.Emulated", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "MetaData": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.MetaData", "kind": "Gdef", "module_hidden": true, "module_public": false}, "NCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Unicode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NCHAR", "name": "NCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NCHAR", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NCHAR", "sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NULLTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NULLTYPE", "name": "NULLTYPE", "type": "sqlalchemy.sql.sqltypes.NullType"}}, "NUMERIC": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Numeric"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NUMERIC", "name": "NUMERIC", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NUMERIC", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NUMERIC", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NUMERIC.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NVARCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Unicode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR", "name": "NVARCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NVARCHAR", "sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NVARCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NativeForEmulated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.NativeForEmulated", "kind": "Gdef"}, "NullType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.NullType", "name": "NullType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.NullType", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NullType.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NullType.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "hashable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.NullType.hashable", "name": "hashable", "type": "builtins.bool"}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.NullType.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.NullType", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of NullType", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Numeric": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": ["builtins.float"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Numeric", "name": "Numeric", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "precision", "scale", "decimal_return_scale", "asdecimal"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Numeric", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "asdecimal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.asdecimal", "name": "asdecimal", "type": "builtins.bool"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of Numeric", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.float", "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "decimal_return_scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.decimal_return_scale", "name": "decimal_return_scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of Numeric", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of Numeric", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": ["builtins.float", "decimal.Decimal"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "precision": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.precision", "name": "precision", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Numeric", "ret_type": {".class": "UnionType", "items": [{".class": "TypeType", "item": "builtins.float"}, {".class": "TypeType", "item": "decimal.Decimal"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Numeric", "ret_type": {".class": "UnionType", "items": [{".class": "TypeType", "item": "builtins.float"}, {".class": "TypeType", "item": "decimal.Decimal"}]}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Numeric.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of Numeric", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.float", "decimal.Decimal", {".class": "NoneType"}]}, "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "scale": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Numeric.scale", "name": "scale", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "PickleType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeDecorator"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.PickleType", "name": "PickleType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.PickleType", "sqlalchemy.sql.type_api.TypeDecorator", "sqlalchemy.sql.base.SchemaEventTarget", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "protocol", "pickler", "comparator"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "protocol", "pickler", "comparator"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType", "builtins.int", {".class": "UnionType", "items": ["sqlalchemy.sql.sqltypes._Pickler", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of PickleType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__reduce__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.__reduce__", "name": "__reduce__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__reduce__ of PickleType", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "TypeType", "item": "sqlalchemy.sql.sqltypes.PickleType"}, {".class": "TupleType", "implicit": false, "items": ["builtins.int", {".class": "NoneType"}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of PickleType", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "variables": []}, "variables": []}}}, "comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.comparator", "name": "comparator", "type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}}}, "compare_values": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.compare_values", "name": "compare_values", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "x", "y"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare_values of PickleType", "ret_type": "builtins.bool", "variables": []}}}, "impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.impl", "name": "impl", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "pickler": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.pickler", "name": "pickler", "type": "sqlalchemy.sql.sqltypes._Pickler"}}, "protocol": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.PickleType.protocol", "name": "protocol", "type": "builtins.int"}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.PickleType.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.PickleType", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of PickleType", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Protocol": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Protocol", "kind": "Gdef", "module_hidden": true, "module_public": false}, "REAL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Float"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.REAL", "name": "REAL", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.REAL", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.REAL", "sqlalchemy.sql.sqltypes.Float", "sqlalchemy.sql.sqltypes.Numeric", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.REAL.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SMALLINT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.SmallInteger"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SMALLINT", "name": "SMALLINT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SMALLINT", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SMALLINT", "sqlalchemy.sql.sqltypes.SmallInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SMALLINT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "STRINGTYPE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.STRINGTYPE", "name": "STRINGTYPE", "type": "sqlalchemy.sql.sqltypes.String"}}, "SchemaEventTarget": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.SchemaEventTarget", "kind": "Gdef"}, "SchemaType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.SchemaEventTarget"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SchemaType", "name": "SchemaType", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SchemaType", "sqlalchemy.sql.base.SchemaEventTarget", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "schema", "metadata", "inherit_schema", "quote", "_create_events"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "schema", "metadata", "inherit_schema", "quote", "_create_events"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SchemaType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "adapt": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.adapt", "name": "adapt", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "cls", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "adapt of SchemaType", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.bind", "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of SchemaType", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "bind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind of SchemaType", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, "variables": []}}}}, "copy": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.copy", "name": "copy", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kw"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "copy of SchemaType", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "create": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "checkfirst"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.create", "name": "create", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "checkfirst"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Connectable", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "create of SchemaType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "drop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "checkfirst"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.drop", "name": "drop", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "checkfirst"], "arg_types": ["sqlalchemy.sql.sqltypes.SchemaType", {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Connectable", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "drop of SchemaType", "ret_type": {".class": "NoneType"}, "variables": []}}}, "inherit_schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.inherit_schema", "name": "inherit_schema", "type": "builtins.bool"}}, "metadata": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.metadata", "name": "metadata", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.name", "name": "name", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "schema": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SchemaType.schema", "name": "schema", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SmallInteger": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Integer"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.SmallInteger", "name": "SmallInteger", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.SmallInteger", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.SmallInteger", "sqlalchemy.sql.sqltypes.Integer", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.SmallInteger.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "String": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Concatenable", {".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.String", "name": "String", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.String.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of String", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.String.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of String", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of String", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of String", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of String", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["builtins.str"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "collation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.collation", "name": "collation", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "convert_unicode": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.convert_unicode", "name": "convert_unicode", "type": {".class": "UnionType", "items": ["builtins.bool", "builtins.str"]}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.String", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of String", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "length": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.length", "name": "length", "type": {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of String", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["builtins.str"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.String.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.String"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of String", "ret_type": {".class": "TypeType", "item": "builtins.str"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.String"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of String", "ret_type": {".class": "TypeType", "item": "builtins.str"}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.String.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes.String", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of String", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "unicode_error": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.String.unicode_error", "name": "unicode_error", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TEXT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TEXT", "name": "TEXT", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TEXT", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TEXT", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TEXT.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TIME": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Time"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TIME", "name": "TIME", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIME", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TIME", "sqlalchemy.sql.sqltypes.Time", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TIME.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TIMESTAMP": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.DateTime"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP", "name": "TIMESTAMP", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.TIMESTAMP", "sqlalchemy.sql.sqltypes.DateTime", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.TIMESTAMP", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TIMESTAMP", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.TIMESTAMP.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.TIMESTAMP", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of TIMESTAMP", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Text": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Text", "name": "Text", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Text", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Text.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Time": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": ["datetime.time"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Time", "name": "Time", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Time", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "timezone"], "arg_types": ["sqlalchemy.sql.sqltypes.Time", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Time", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Time.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Time.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes.Time", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of Time", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Time.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Time"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Time", "ret_type": {".class": "TypeType", "item": "datetime.time"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes.Time"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of Time", "ret_type": {".class": "TypeType", "item": "datetime.time"}, "variables": []}}}}, "timezone": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Time.timezone", "name": "timezone", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeDecorator": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeDecorator", "kind": "Gdef"}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef"}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Unicode": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.Unicode", "name": "Unicode", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Unicode", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.Unicode", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.Unicode", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Unicode", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.Unicode", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Unicode", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.Unicode", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Unicode", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.Unicode", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Unicode", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.Unicode.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "UnicodeText": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.Text"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.UnicodeText", "name": "UnicodeText", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.UnicodeText", "sqlalchemy.sql.sqltypes.Text", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.UnicodeText", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnicodeText", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.UnicodeText", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnicodeText", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.UnicodeText", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnicodeText", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "length", "collation", "convert_unicode", "unicode_error", "_warn_on_bytestring"], "arg_types": ["sqlalchemy.sql.sqltypes.UnicodeText", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnicodeText", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.UnicodeText.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_hidden": true, "module_public": false}, "VARBINARY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._Binary"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.VARBINARY", "name": "VARBINARY", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.VARBINARY", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.VARBINARY", "sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.VARBINARY.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "VARCHAR": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes.String"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes.VARCHAR", "name": "VARCHAR", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes.VARCHAR", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes.VARCHAR", "sqlalchemy.sql.sqltypes.String", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes.VARCHAR.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_AbstractInterval": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval", "name": "_AbstractInterval", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._AbstractInterval", "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._AbstractInterval.coerce_compared_value", "name": "coerce_compared_value", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.sqltypes._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes._AbstractInterval"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "coerce_compared_value of _AbstractInterval", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "_Binary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bytes"], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._Binary", "name": "_Binary", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "length"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of _Binary", "ret_type": {".class": "NoneType"}, "variables": []}}}, "bind_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.bind_processor", "name": "bind_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bind_processor of _Binary", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["builtins.bytes"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "NoneType"}]}, "variables": []}}}, "coerce_compared_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.coerce_compared_value", "name": "coerce_compared_value", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "op", "value"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "coerce_compared_value of _Binary", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}, "get_dbapi_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.get_dbapi_type", "name": "get_dbapi_type", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dbapi"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_dbapi_type of _Binary", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "length": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes._Binary.length", "name": "length", "type": "builtins.int"}}, "literal_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.literal_processor", "name": "literal_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "dialect"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.engine.interfaces.Dialect"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_processor of _Binary", "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["builtins.bytes"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.str", "variables": []}, "variables": []}}}, "python_type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.sqltypes._Binary.python_type", "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of _Binary", "ret_type": {".class": "TypeType", "item": "builtins.bytes"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "python_type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "python_type of _Binary", "ret_type": {".class": "TypeType", "item": "builtins.bytes"}, "variables": []}}}}, "result_processor": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Binary.result_processor", "name": "result_processor", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "dialect", "coltype"], "arg_types": ["sqlalchemy.sql.sqltypes._Binary", "sqlalchemy.engine.interfaces.Dialect", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "result_processor of _Binary", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": [{".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.bytes", {".class": "NoneType"}]}, "variables": []}, {".class": "NoneType"}]}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BinaryType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 4, "fullname": "sqlalchemy.sql.sqltypes._BinaryType", "line": 133, "no_args": true, "normalized": false, "target": "builtins.bytes"}}, "_E": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._E", "name": "_E", "upper_bound": "sqlalchemy.sql.sqltypes.Enum", "values": [], "variance": 0}}, "_JSONT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.sqltypes._JSONT", "line": 247, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.list"}]}}}, "_LookupExpressionAdapter": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "name": "_LookupExpressionAdapter", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._LookupExpressionAdapter", "builtins.object"], "names": {".class": "SymbolTable", "comparator_factory": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.sqltypes._LookupExpressionAdapter.comparator_factory", "name": "comparator_factory", "type": {".class": "TypeType", "item": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_Pickler": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.sqltypes._Pickler", "name": "_Pickler", "type_vars": []}, "flags": ["is_protocol"], "fullname": "sqlalchemy.sql.sqltypes._Pickler", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.sqltypes", "mro": ["sqlalchemy.sql.sqltypes._Pickler", "builtins.object"], "names": {".class": "SymbolTable", "dump": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 5], "arg_names": ["self", "obj", "file", "protocol", "fix_imports"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Pickler.dump", "name": "dump", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 5], "arg_names": ["self", "obj", "file", "protocol", "fix_imports"], "arg_types": ["sqlalchemy.sql.sqltypes._Pickler", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": ["builtins.bytes"], "type_ref": "typing.IO"}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "dump of _Pickler", "ret_type": {".class": "NoneType"}, "variables": []}}}, "dumps": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 5], "arg_names": ["self", "obj", "protocol", "fix_imports"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Pickler.dumps", "name": "dumps", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 5], "arg_names": ["self", "obj", "protocol", "fix_imports"], "arg_types": ["sqlalchemy.sql.sqltypes._Pickler", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "dumps of _Pickler", "ret_type": "builtins.bytes", "variables": []}}}, "load": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "file", "fix_imports", "encoding", "errors"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Pickler.load", "name": "load", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "file", "fix_imports", "encoding", "errors"], "arg_types": ["sqlalchemy.sql.sqltypes._Pickler", {".class": "Instance", "args": ["builtins.bytes"], "type_ref": "typing.IO"}, "builtins.bool", "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "load of _Pickler", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "loads": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "bytes_object", "fix_imports", "encoding", "errors"], "flags": [], "fullname": "sqlalchemy.sql.sqltypes._Pickler.loads", "name": "loads", "type": {".class": "CallableType", "arg_kinds": [0, 0, 5, 5, 5], "arg_names": ["self", "bytes_object", "fix_imports", "encoding", "errors"], "arg_types": ["sqlalchemy.sql.sqltypes._Pickler", "builtins.bytes", "builtins.bool", "builtins.str", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "loads of _Pickler", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.sqltypes._T", "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.sqltypes.__package__", "name": "__package__", "type": "builtins.str"}}, "date": {".class": "SymbolTableNode", "cross_ref": "datetime.date", "kind": "Gdef", "module_hidden": true, "module_public": false}, "datetime": {".class": "SymbolTableNode", "cross_ref": "datetime.datetime", "kind": "Gdef", "module_hidden": true, "module_public": false}, "decimal": {".class": "SymbolTableNode", "cross_ref": "decimal", "kind": "Gdef", "module_hidden": true, "module_public": false}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef", "module_hidden": true, "module_public": false}, "sys": {".class": "SymbolTableNode", "cross_ref": "sys", "kind": "Gdef", "module_hidden": true, "module_public": false}, "time": {".class": "SymbolTableNode", "cross_ref": "datetime.time", "kind": "Gdef", "module_hidden": true, "module_public": false}, "timedelta": {".class": "SymbolTableNode", "cross_ref": "datetime.timedelta", "kind": "Gdef", "module_hidden": true, "module_public": false}, "typing_Text": {".class": "SymbolTableNode", "cross_ref": "typing.Text", "kind": "Gdef"}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef", "module_public": false}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/sql/sqltypes.pyi"}