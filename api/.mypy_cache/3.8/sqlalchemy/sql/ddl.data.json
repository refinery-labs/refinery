{".class": "MypyFile", "_fullname": "sqlalchemy.sql.ddl", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "AddConstraint": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.AddConstraint", "name": "AddConstraint", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.AddConstraint", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.AddConstraint", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "element", "args", "kw"], "flags": [], "fullname": "sqlalchemy.sql.ddl.AddConstraint.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "element", "args", "kw"], "arg_types": ["sqlalchemy.sql.ddl.AddConstraint", "builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AddConstraint", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.AddConstraint.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef"}, "ColumnElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ColumnElement", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Connectable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Connectable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Connection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Connection", "kind": "Gdef", "module_hidden": true, "module_public": false}, "CreateColumn": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.ddl._DDLCompiles"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.CreateColumn", "name": "CreateColumn", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateColumn", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.CreateColumn", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateColumn.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.ddl.CreateColumn"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CreateColumn", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateColumn.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateColumn.element", "name": "element", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "CreateIndex": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.CreateIndex", "name": "CreateIndex", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateIndex", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.CreateIndex", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateIndex.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CreateSchema": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.CreateSchema", "name": "CreateSchema", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateSchema", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.CreateSchema", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 4], "arg_names": ["self", "name", "quote", "kw"], "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateSchema.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 4], "arg_names": ["self", "name", "quote", "kw"], "arg_types": ["sqlalchemy.sql.ddl.CreateSchema", "builtins.str", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CreateSchema", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateSchema.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateSchema.quote", "name": "quote", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CreateSequence": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.CreateSequence", "name": "CreateSequence", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateSequence", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.CreateSequence", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateSequence.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CreateTable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.CreateTable", "name": "CreateTable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateTable", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.CreateTable", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "on", "bind", "include_foreign_key_constraints"], "flags": [], "fullname": "sqlalchemy.sql.ddl.CreateTable.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "on", "bind", "include_foreign_key_constraints"], "arg_types": ["sqlalchemy.sql.ddl.CreateTable", "sqlalchemy.sql.schema.Table", {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "sqlalchemy.sql.ddl._DDLOnCallback", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Connectable", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CreateTable", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateTable.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateTable.columns", "name": "columns", "type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.ddl.CreateColumn"}], "type_ref": "builtins.list"}}}, "include_foreign_key_constraints": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.CreateTable.include_foreign_key_constraints", "name": "include_foreign_key_constraints", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DDL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.ddl.DDLElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DDL", "name": "DDL", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DDL", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DDL", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "statement", "on", "context", "bind"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDL.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "statement", "on", "context", "bind"], "arg_types": ["sqlalchemy.sql.ddl.DDL", "builtins.str", {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "sqlalchemy.sql.ddl._DDLOnCallback", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Connectable", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DDL", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDL.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "context": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDL.context", "name": "context", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}}}, "on": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDL.on", "name": "on", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "sqlalchemy.sql.ddl._DDLOnCallback", {".class": "NoneType"}]}}}, "statement": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDL.statement", "name": "statement", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DDLBase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.SchemaVisitor"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DDLBase", "name": "DDLBase", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLBase", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DDLBase", "sqlalchemy.sql.base.SchemaVisitor", "sqlalchemy.sql.visitors.ClauseVisitor", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "connection"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLBase.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "connection"], "arg_types": ["sqlalchemy.sql.ddl.DDLBase", "sqlalchemy.engine.base.Connection"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DDLBase", "ret_type": {".class": "NoneType"}, "variables": []}}}, "connection": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLBase.connection", "name": "connection", "type": "sqlalchemy.engine.base.Connection"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DDLElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Executable", "sqlalchemy.sql.ddl._DDLCompiles"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DDLElement", "name": "DDLElement", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__call__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement.__call__", "name": "__call__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "target", "bind", "kw"], "arg_types": ["sqlalchemy.sql.ddl.DDLElement", {".class": "UnionType", "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}, "sqlalchemy.engine.base.Connection", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__call__ of DDLElement", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.result.ResultProxy", {".class": "NoneType"}]}, "variables": []}}}, "against": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "target"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement.against", "name": "against", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "target"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}, "sqlalchemy.sql.schema.SchemaItem"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "against of DDLElement", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}]}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.bind", "name": "bind", "type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}}}, "callable_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.callable_", "name": "callable_", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.ddl._DDLCallable", {".class": "NoneType"}]}}}, "dialect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.dialect", "name": "dialect", "type": {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Dialect", {".class": "NoneType"}]}}}, "execute": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "target"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement.execute", "name": "execute", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "bind", "target"], "arg_types": ["sqlalchemy.sql.ddl.DDLElement", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.schema.SchemaItem", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "execute of DDLElement", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.engine.result.ResultProxy", {".class": "NoneType"}]}, "variables": []}}}, "execute_at": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "event_name", "target"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement.execute_at", "name": "execute_at", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "event_name", "target"], "arg_types": ["sqlalchemy.sql.ddl.DDLElement", "builtins.str", "sqlalchemy.sql.schema.SchemaItem"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "execute_at of DDLElement", "ret_type": {".class": "NoneType"}, "variables": []}}}, "execute_if": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "dialect", "callable_", "state"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DDLElement.execute_if", "name": "execute_if", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "dialect", "callable_", "state"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}, {".class": "UnionType", "items": ["sqlalchemy.engine.interfaces.Dialect", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.ddl._DDLCallable", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "execute_if of DDLElement", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.ddl._DDLE", "id": -1, "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}]}}}, "on": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.on", "name": "on", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "sqlalchemy.sql.ddl._DDLOnCallback", {".class": "NoneType"}]}}}, "state": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.state", "name": "state", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "target": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DDLElement.target", "name": "target", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.schema.SchemaItem", {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Dialect": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.interfaces.Dialect", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef", "module_hidden": true, "module_public": false}, "DropConstraint": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DropConstraint", "name": "DropConstraint", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DropConstraint", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DropConstraint", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 4], "arg_names": ["self", "element", "cascade", "kw"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DropConstraint.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 4], "arg_names": ["self", "element", "cascade", "kw"], "arg_types": ["sqlalchemy.sql.ddl.DropConstraint", "builtins.str", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DropConstraint", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropConstraint.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "cascade": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropConstraint.cascade", "name": "cascade", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DropIndex": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DropIndex", "name": "DropIndex", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DropIndex", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DropIndex", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropIndex.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DropSchema": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DropSchema", "name": "DropSchema", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DropSchema", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DropSchema", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 4], "arg_names": ["self", "name", "quote", "cascade", "kw"], "flags": [], "fullname": "sqlalchemy.sql.ddl.DropSchema.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 4], "arg_names": ["self", "name", "quote", "cascade", "kw"], "arg_types": ["sqlalchemy.sql.ddl.DropSchema", "builtins.str", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DropSchema", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropSchema.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "cascade": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropSchema.cascade", "name": "cascade", "type": "builtins.bool"}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropSchema.quote", "name": "quote", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DropSequence": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DropSequence", "name": "DropSequence", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DropSequence", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DropSequence", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropSequence.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DropTable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.DropTable", "name": "DropTable", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.DropTable", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.DropTable", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.DropTable.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef"}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ForeignKeyConstraint": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKeyConstraint", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Generic": {".class": "SymbolTableNode", "cross_ref": "typing.Generic", "kind": "Gdef", "module_hidden": true, "module_public": false}, "IdentifierPreparer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.compiler.IdentifierPreparer", "kind": "Gdef", "module_hidden": true, "module_public": false}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef", "module_hidden": true, "module_public": false}, "MetaData": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.MetaData", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Protocol": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Protocol", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ResultProxy": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.result.ResultProxy", "kind": "Gdef", "module_hidden": true, "module_public": false}, "SchemaDropper": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.ddl.DDLBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.SchemaDropper", "name": "SchemaDropper", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.SchemaDropper", "sqlalchemy.sql.ddl.DDLBase", "sqlalchemy.sql.base.SchemaVisitor", "sqlalchemy.sql.visitors.ClauseVisitor", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 4], "arg_names": ["self", "dialect", "connection", "checkfirst", "tables", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 4], "arg_names": ["self", "dialect", "connection", "checkfirst", "tables", "kwargs"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "sqlalchemy.engine.interfaces.Dialect", "sqlalchemy.engine.base.Connection", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "builtins.list"}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}, "checkfirst": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.checkfirst", "name": "checkfirst", "type": "builtins.bool"}}, "dialect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.dialect", "name": "dialect", "type": "sqlalchemy.engine.interfaces.Dialect"}}, "memo": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.memo", "name": "memo", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}}}, "preparer": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.preparer", "name": "preparer", "type": "sqlalchemy.sql.compiler.IdentifierPreparer"}}, "tables": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.tables", "name": "tables", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "builtins.list"}, {".class": "NoneType"}]}}}, "visit_foreign_key_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "constraint"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.visit_foreign_key_constraint", "name": "visit_foreign_key_constraint", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "constraint"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "sqlalchemy.sql.schema.ForeignKeyConstraint"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_foreign_key_constraint of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_index": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.visit_index", "name": "visit_index", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_index of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_metadata": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "metadata"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.visit_metadata", "name": "visit_metadata", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "metadata"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "sqlalchemy.sql.schema.MetaData"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_metadata of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_sequence": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "sequence", "drop_ok"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.visit_sequence", "name": "visit_sequence", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "sequence", "drop_ok"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "builtins.str", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_sequence of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "table", "drop_ok", "_is_metadata_operation"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaDropper.visit_table", "name": "visit_table", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "table", "drop_ok", "_is_metadata_operation"], "arg_types": ["sqlalchemy.sql.ddl.SchemaDropper", "sqlalchemy.sql.schema.Table", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_table of SchemaDropper", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SchemaGenerator": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.ddl.DDLBase"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl.SchemaGenerator", "name": "SchemaGenerator", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl.SchemaGenerator", "sqlalchemy.sql.ddl.DDLBase", "sqlalchemy.sql.base.SchemaVisitor", "sqlalchemy.sql.visitors.ClauseVisitor", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 4], "arg_names": ["self", "dialect", "connection", "checkfirst", "tables", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 4], "arg_names": ["self", "dialect", "connection", "checkfirst", "tables", "kwargs"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "sqlalchemy.engine.interfaces.Dialect", "sqlalchemy.engine.base.Connection", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "builtins.list"}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SchemaGenerator", "ret_type": {".class": "NoneType"}, "variables": []}}}, "checkfirst": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.checkfirst", "name": "checkfirst", "type": "builtins.bool"}}, "dialect": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.dialect", "name": "dialect", "type": "sqlalchemy.engine.interfaces.Dialect"}}, "memo": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.memo", "name": "memo", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.dict"}}}, "preparer": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.preparer", "name": "preparer", "type": "sqlalchemy.sql.compiler.IdentifierPreparer"}}, "tables": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.tables", "name": "tables", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "builtins.list"}, {".class": "NoneType"}]}}}, "visit_foreign_key_constraint": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "constraint"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.visit_foreign_key_constraint", "name": "visit_foreign_key_constraint", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "constraint"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "sqlalchemy.sql.schema.ForeignKeyConstraint"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_foreign_key_constraint of SchemaGenerator", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_index": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.visit_index", "name": "visit_index", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "index"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_index of SchemaGenerator", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_metadata": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "metadata"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.visit_metadata", "name": "visit_metadata", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "metadata"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "sqlalchemy.sql.schema.MetaData"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_metadata of SchemaGenerator", "ret_type": {".class": "NoneType"}, "variables": []}}}, "visit_sequence": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "sequence", "create_ok"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.visit_sequence", "name": "visit_sequence", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "sequence", "create_ok"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "builtins.str", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_sequence of SchemaGenerator", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "visit_table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "table", "create_ok", "include_foreign_key_constraints", "_is_metadata_operation"], "flags": [], "fullname": "sqlalchemy.sql.ddl.SchemaGenerator.visit_table", "name": "visit_table", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "table", "create_ok", "include_foreign_key_constraints", "_is_metadata_operation"], "arg_types": ["sqlalchemy.sql.ddl.SchemaGenerator", "sqlalchemy.sql.schema.Table", "builtins.bool", {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "visit_table of SchemaGenerator", "ret_type": {".class": "NoneType"}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SchemaItem": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.SchemaItem", "kind": "Gdef", "module_hidden": true, "module_public": false}, "SchemaVisitor": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.SchemaVisitor", "kind": "Gdef"}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Set": {".class": "SymbolTableNode", "cross_ref": "typing.Set", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Table": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.Table", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_hidden": true, "module_public": false}, "_CreateDropBase": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.ddl.DDLElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl._CreateDropBase", "name": "_CreateDropBase", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.ddl._CreateDropBase", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "element", "on", "bind"], "flags": [], "fullname": "sqlalchemy.sql.ddl._CreateDropBase.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "element", "on", "bind"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": ["builtins.str"], "type_ref": "builtins.tuple"}, "sqlalchemy.sql.ddl._DDLOnCallback", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of _CreateDropBase", "ret_type": {".class": "NoneType"}, "variables": []}}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl._CreateDropBase.bind", "name": "bind", "type": {".class": "UnionType", "items": ["sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl._CreateDropBase.element", "name": "element", "type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.ddl._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "_DDLCallable": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl._DDLCallable", "name": "_DDLCallable", "type_vars": []}, "flags": ["is_protocol"], "fullname": "sqlalchemy.sql.ddl._DDLCallable", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl._DDLCallable", "builtins.object"], "names": {".class": "SymbolTable", "__call__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "ddl", "target", "bind", "tables", "state", "checkfirst"], "flags": [], "fullname": "sqlalchemy.sql.ddl._DDLCallable.__call__", "name": "__call__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "ddl", "target", "bind", "tables", "state", "checkfirst"], "arg_types": ["sqlalchemy.sql.ddl._DDLCallable", "sqlalchemy.sql.ddl.DDLElement", {".class": "UnionType", "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}, "sqlalchemy.engine.base.Connection", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__call__ of _DDLCallable", "ret_type": "builtins.bool", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_DDLCompiles": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl._DDLCompiles", "name": "_DDLCompiles", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl._DDLCompiles", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_DDLE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.ddl._DDLE", "name": "_DDLE", "upper_bound": "sqlalchemy.sql.ddl.DDLElement", "values": [], "variance": 0}}, "_DDLOnCallback": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl._DDLOnCallback", "name": "_DDLOnCallback", "type_vars": []}, "flags": ["is_protocol"], "fullname": "sqlalchemy.sql.ddl._DDLOnCallback", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl._DDLOnCallback", "builtins.object"], "names": {".class": "SymbolTable", "__call__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 0, 1], "arg_names": ["self", "ddl", "event", "target", "connection", "tables"], "flags": [], "fullname": "sqlalchemy.sql.ddl._DDLOnCallback.__call__", "name": "__call__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 0, 1], "arg_names": ["self", "ddl", "event", "target", "connection", "tables"], "arg_types": ["sqlalchemy.sql.ddl._DDLOnCallback", "sqlalchemy.sql.ddl.DDLElement", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.schema.MetaData", {".class": "NoneType"}]}, "sqlalchemy.engine.base.Connection", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.list"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__call__ of _DDLOnCallback", "ret_type": "builtins.bool", "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_DropView": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.str"], "type_ref": "sqlalchemy.sql.ddl._CreateDropBase"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.ddl._DropView", "name": "_DropView", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.ddl._DropView", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.ddl", "mro": ["sqlalchemy.sql.ddl._DropView", "sqlalchemy.sql.ddl._CreateDropBase", "sqlalchemy.sql.ddl.DDLElement", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.ddl._DDLCompiles", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.ddl._DropView.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_SortResultType": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "sqlalchemy.sql.ddl._SortResultType", "line": 143, "no_args": false, "normalized": false, "target": {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["sqlalchemy.sql.schema.Table", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "type_ref": "builtins.set"}, {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "type_ref": "builtins.list"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "builtins.list"}}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.ddl._T", "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.ddl.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.ddl.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.ddl.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.ddl.__package__", "name": "__package__", "type": "builtins.str"}}, "sort_tables": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["tables", "skip_fn", "extra_dependencies"], "flags": [], "fullname": "sqlalchemy.sql.ddl.sort_tables", "name": "sort_tables", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["tables", "skip_fn", "extra_dependencies"], "arg_types": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["sqlalchemy.sql.schema.ForeignKey"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "builtins.bool", "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.schema.Table"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "sort_tables", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "builtins.list"}, "variables": []}}}, "sort_tables_and_constraints": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["tables", "filter_fn", "extra_dependencies"], "flags": [], "fullname": "sqlalchemy.sql.ddl.sort_tables_and_constraints", "name": "sort_tables_and_constraints", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["tables", "filter_fn", "extra_dependencies"], "arg_types": [{".class": "Instance", "args": ["sqlalchemy.sql.schema.Table"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["sqlalchemy.sql.schema.ForeignKeyConstraint"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}, "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.schema.Table", "sqlalchemy.sql.schema.Table"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "sort_tables_and_constraints", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "sqlalchemy.sql.ddl._SortResultType"}, "variables": []}}}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/sql/ddl.pyi"}