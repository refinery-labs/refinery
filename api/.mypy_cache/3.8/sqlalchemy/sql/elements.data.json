{".class": "MypyFile", "_fullname": "sqlalchemy.sql.elements", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "Annotated": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.annotation.Annotated", "kind": "Gdef"}, "AnnotatedColumnElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "sqlalchemy.sql.annotation.Annotated"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement", "name": "AnnotatedColumnElement", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement", "metaclass_type": null, "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.AnnotatedColumnElement", "sqlalchemy.sql.annotation.Annotated", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "flags": [], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "element", "values"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AnnotatedColumnElement", "ret_type": {".class": "NoneType"}, "variables": []}}}, "anon_label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.anon_label", "name": "anon_label", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "anon_label of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "anon_label", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "anon_label of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}}}, "info": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.info", "name": "info", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "info of AnnotatedColumnElement", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "info", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "info of AnnotatedColumnElement", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.key", "name": "key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "key of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "key of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.name", "name": "name", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "name of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "name", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "name of AnnotatedColumnElement", "ret_type": "builtins.str", "variables": []}}}}, "table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.AnnotatedColumnElement.table", "name": "table", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "table of AnnotatedColumnElement", "ret_type": "sqlalchemy.sql.selectable.TableClause", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "table", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.AnnotatedColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "table of AnnotatedColumnElement", "ret_type": "sqlalchemy.sql.selectable.TableClause", "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "AsBoolean": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.AsBoolean", "name": "AsBoolean", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.AsBoolean", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.AsBoolean", "sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "element", "operator", "negate"], "flags": [], "fullname": "sqlalchemy.sql.elements.AsBoolean.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "element", "operator", "negate"], "arg_types": ["sqlalchemy.sql.elements.AsBoolean", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of AsBoolean", "ret_type": {".class": "NoneType"}, "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.element", "name": "element", "type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}}}, "modifier": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.modifier", "name": "modifier", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "negate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.negate", "name": "negate", "type": {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.operator", "name": "operator", "type": {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.AsBoolean.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._AB", "id": -1, "name": "_AB", "upper_bound": "sqlalchemy.sql.elements.AsBoolean", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of AsBoolean", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._AB", "id": -1, "name": "_AB", "upper_bound": "sqlalchemy.sql.elements.AsBoolean", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._AB", "id": -1, "name": "_AB", "upper_bound": "sqlalchemy.sql.elements.AsBoolean", "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.type", "name": "type", "type": "sqlalchemy.sql.sqltypes.Boolean"}}, "wraps_column_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.AsBoolean.wraps_column_expression", "name": "wraps_column_expression", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BinaryExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.BinaryExpression", "name": "BinaryExpression", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.BinaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__bool__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__bool__", "name": "__bool__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__bool__ of BinaryExpression", "ret_type": "builtins.bool", "variables": []}}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BinaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BinaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BinaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "operator", "type_", "negate", "modifiers"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BinaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__nonzero__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__nonzero__", "name": "__nonzero__", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of BinaryExpression", "ret_type": "builtins.bool", "variables": []}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression.get_children", "name": "get_children", "type": null}}, "is_comparison": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.is_comparison", "name": "is_comparison", "type": null}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "is_comparison", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": true, "is_ellipsis_args": false, "name": "is_comparison of BinaryExpression", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "left": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.left", "name": "left", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": 2, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}]}}}, "modifiers": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.modifiers", "name": "modifiers", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "negate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.negate", "name": "negate", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.operator", "name": "operator", "type": {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "right": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.right", "name": "right", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._V", "id": 3, "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.BinaryExpression.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._BE", "id": -1, "name": "_BE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of BinaryExpression", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._BE", "id": -1, "name": "_BE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._BE", "id": -1, "name": "_BE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BinaryExpression.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}}, "tuple_type": null, "type_vars": ["_T", "_U", "_V"], "typeddict_type": null}}, "BindParameter": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.BindParameter", "name": "BindParameter", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.BindParameter", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.BindParameter", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.BindParameter.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BindParameter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, "builtins.str", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BindParameter", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BindParameter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, "builtins.str", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BindParameter", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, "builtins.str", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BindParameter", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "type_", "unique", "required", "quote", "callable_", "expanding", "isoutparam", "_compared_to_operator", "_compared_to_type"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, "builtins.str", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [], "arg_names": [], "arg_types": [], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}, {".class": "NoneType"}]}, "builtins.bool", "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BindParameter", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "callable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.callable", "name": "callable", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.BindParameter.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of BindParameter", "ret_type": "builtins.bool", "variables": []}}}, "effective_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BindParameter.effective_value", "name": "effective_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "effective_value of BindParameter", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "effective_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "effective_value of BindParameter", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, "variables": []}}}}, "isoutparam": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.isoutparam", "name": "isoutparam", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.key", "name": "key", "type": "builtins.str"}}, "required": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.required", "name": "required", "type": "builtins.bool"}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "unique": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.unique", "name": "unique", "type": "builtins.bool"}}, "value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BindParameter.value", "name": "value", "type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "NoneType"}]}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Boolean": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Boolean", "kind": "Gdef", "module_hidden": true, "module_public": false}, "BooleanClauseList": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseList", {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.BooleanClauseList", "name": "BooleanClauseList", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.BooleanClauseList", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.BooleanClauseList", "sqlalchemy.sql.elements.ClauseList", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.BooleanClauseList.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "and_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BooleanClauseList.and_", "name": "and_", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.BooleanClauseList"}, {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "and_ of BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "and_", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.BooleanClauseList"}, {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "and_ of BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}}}}, "or_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.BooleanClauseList.or_", "name": "or_", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.BooleanClauseList"}, {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "or_ of BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "or_", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["cls", "clauses"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.BooleanClauseList"}, {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "or_ of BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.BooleanClauseList.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._BCL", "id": -1, "name": "_BCL", "upper_bound": "sqlalchemy.sql.elements.BooleanClauseList", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of BooleanClauseList", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._BCL", "id": -1, "name": "_BCL", "upper_bound": "sqlalchemy.sql.elements.BooleanClauseList", "values": [], "variance": 0}, {".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.Grouping"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._BCL", "id": -1, "name": "_BCL", "upper_bound": "sqlalchemy.sql.elements.BooleanClauseList", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Case": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Case", "name": "Case", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Case", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Case", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Case.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Case.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Case"}, {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}, {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Case", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Case.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Case"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Case", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Case"}, {".class": "Instance", "args": [{".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}, {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Case", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "whens", "value", "else_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Case"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "typing.Mapping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Case", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Case.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "else_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Case.else_", "name": "else_", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Case.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Case"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Case", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Case.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Case.value", "name": "value", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "whens": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Case.whens", "name": "whens", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Cast": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Cast", "name": "Cast", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Cast", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Cast", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Cast.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Cast.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Cast", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Cast.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Cast", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Cast", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Cast", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Cast.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Cast.clause", "name": "clause", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Cast.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Cast", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement", {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "sqlalchemy.sql.elements.TypeClause"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Cast.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "typeclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Cast.typeclause", "name": "typeclause", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeClause"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "ClauseElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.visitors.Visitable"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.ClauseElement", "name": "ClauseElement", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__and__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.__and__", "name": "__and__", "type": null}}, "__bool__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.__bool__", "name": "__bool__", "type": null}}, "__invert__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.__invert__", "name": "__invert__", "type": null}}, "__nonzero__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.__nonzero__", "name": "__nonzero__", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "__or__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.__or__", "name": "__or__", "type": null}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "bind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.bind", "name": "bind", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": ["sqlalchemy.sql.elements.ClauseElement", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of ClauseElement", "ret_type": "builtins.bool", "variables": []}}}, "compile": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "bind", "dialect", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.compile", "name": "compile", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 4], "arg_names": ["self", "bind", "dialect", "kw"], "arg_types": ["sqlalchemy.sql.elements.ClauseElement", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compile of ClauseElement", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.description", "name": "description", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseElement", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of ClauseElement", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "is_clause_element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.is_clause_element", "name": "is_clause_element", "type": "builtins.bool"}}, "is_selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.is_selectable", "name": "is_selectable", "type": "builtins.bool"}}, "params": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "optionaldict", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.params", "name": "params", "type": null}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": ["sqlalchemy.sql.elements.ClauseElement", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ClauseElement", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "supports_execution": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseElement.supports_execution", "name": "supports_execution", "type": "builtins.bool"}}, "unique_params": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "optionaldict", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseElement.unique_params", "name": "unique_params", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ClauseList": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.ClauseList", "name": "ClauseList", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.ClauseList", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "_literal_as_text", "kwargs"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ClauseList.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "_literal_as_text", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements._LiteralAsTextCallback"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ClauseList", "ret_type": {".class": "NoneType"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "kwargs"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ClauseList.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ClauseList", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 2, 5, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "_literal_as_text", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements._LiteralAsTextCallback"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ClauseList", "ret_type": {".class": "NoneType"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 2, 5, 5, 5, 4], "arg_names": ["self", "clauses", "operator", "group", "group_contents", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ClauseList", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__iter__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.__iter__", "name": "__iter__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["sqlalchemy.sql.elements.ClauseList"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__iter__ of ClauseList", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "typing.Iterator"}, "variables": []}}}, "__len__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.__len__", "name": "__len__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["sqlalchemy.sql.elements.ClauseList"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__len__ of ClauseList", "ret_type": "builtins.int", "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseList.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "append": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.append", "name": "append", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "append of ClauseList", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "clauses": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseList.clauses", "name": "clauses", "type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "builtins.list"}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of ClauseList", "ret_type": "builtins.bool", "variables": []}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.ClauseList", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of ClauseList", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "builtins.list"}, "variables": []}}}, "group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseList.group", "name": "group", "type": "builtins.bool"}}, "group_contents": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseList.group_contents", "name": "group_contents", "type": "builtins.bool"}}, "operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ClauseList.operator", "name": "operator", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.ClauseList.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CL", "id": -1, "name": "_CL", "upper_bound": "sqlalchemy.sql.elements.ClauseList", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ClauseList", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CL", "id": -1, "name": "_CL", "upper_bound": "sqlalchemy.sql.elements.ClauseList", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.Grouping"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._CL", "id": -1, "name": "_CL", "upper_bound": "sqlalchemy.sql.elements.ClauseList", "values": [], "variance": 0}]}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CollectionAggregate": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.CollectionAggregate", "name": "CollectionAggregate", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.CollectionAggregate", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.CollectionAggregate", "sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "_create_all": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_class"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_all", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "flags": ["is_class", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_all", "name": "_create_all", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_all of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_classmethod"], "fullname": null, "name": "_create_all", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "flags": ["is_class", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_all", "name": "_create_all", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_all of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_classmethod"], "fullname": null, "name": "_create_all", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_all of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_all of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": []}]}}}, "_create_any": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": ["is_class"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_any", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "flags": ["is_class", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_any", "name": "_create_any", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_any of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_classmethod"], "fullname": null, "name": "_create_any", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "flags": ["is_class", "is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.CollectionAggregate._create_any", "name": "_create_any", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_any of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": ["is_classmethod"], "fullname": null, "name": "_create_any", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_any of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_any of CollectionAggregate", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, "variables": []}]}}}, "operate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "op", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.CollectionAggregate.operate", "name": "operate", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "op", "other", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "operate of CollectionAggregate", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "reverse_operate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "op", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.CollectionAggregate.reverse_operate", "name": "reverse_operate", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "op", "other", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.CollectionAggregate"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "reverse_operate of CollectionAggregate", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "ColumnClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Immutable", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.ColumnClause", "name": "ColumnClause", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.ColumnClause", "sqlalchemy.sql.base.Immutable", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnClause.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "builtins.str", {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.TableClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ColumnClause", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.TableClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ColumnClause", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "builtins.str", {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.TableClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ColumnClause", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "text", "type_", "is_literal", "_selectable"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, "builtins.bool", {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.TableClause", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ColumnClause", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "default": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.default", "name": "default", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "description": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnClause.description", "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of ColumnClause", "ret_type": "builtins.str", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "description", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "description of ColumnClause", "ret_type": "builtins.str", "variables": []}}}}, "is_literal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.is_literal", "name": "is_literal", "type": "builtins.bool"}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.key", "name": "key", "type": "builtins.str"}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.name", "name": "name", "type": "builtins.str"}}, "onupdate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.onupdate", "name": "onupdate", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "server_default": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.server_default", "name": "server_default", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "server_onupdate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.server_onupdate", "name": "server_onupdate", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "table": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.table", "name": "table", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.selectable.TableClause", {".class": "NoneType"}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnClause.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "ColumnElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.ColumnElement", "name": "ColumnElement", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnElement.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "anon_label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.anon_label", "name": "anon_label", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "anon_label of ColumnElement", "ret_type": "sqlalchemy.sql.elements._anonymous_label", "variables": []}}}, "base_columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.base_columns", "name": "base_columns", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "base_columns of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.set"}, "variables": []}}}, "cast": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.cast", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnElement.cast", "name": "cast", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cast of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "cast", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnElement.cast", "name": "cast", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cast of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "cast", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cast of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "cast of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Cast"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}]}}}, "comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.comparator", "name": "comparator", "type": null}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 4], "arg_names": ["self", "other", "use_proxies", "equivalents", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 4], "arg_names": ["self", "other", "use_proxies", "equivalents", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.bool", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of ColumnElement", "ret_type": "builtins.bool", "variables": []}}}, "expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnElement.expression", "name": "expression", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "expression of ColumnElement", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "expression", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "expression of ColumnElement", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}]}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnElement.foreign_keys", "name": "foreign_keys", "type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.list"}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnElement.key", "name": "key", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "label": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.label", "name": "label", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "name"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "label of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "variables": []}}}, "operate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "op", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.operate", "name": "operate", "type": null}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ColumnElement.primary_key", "name": "primary_key", "type": "builtins.bool"}}, "proxy_set": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.proxy_set", "name": "proxy_set", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "proxy_set of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "type_ref": "builtins.set"}, "variables": []}}}, "reverse_operate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "op", "other", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.reverse_operate", "name": "reverse_operate", "type": null}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of ColumnElement", "ret_type": {".class": "UnionType", "items": ["sqlalchemy.sql.elements.AsBoolean", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._CE", "id": -1, "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}]}}}, "shares_lineage": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "othercolumn"], "flags": [], "fullname": "sqlalchemy.sql.elements.ColumnElement.shares_lineage", "name": "shares_lineage", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "othercolumn"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "shares_lineage of ColumnElement", "ret_type": "builtins.bool", "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.ColumnElement.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of ColumnElement", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Connection": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Connection", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Dict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Engine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.engine.base.Engine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Executable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Executable", "kind": "Gdef"}, "Extract": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.int"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Extract", "name": "Extract", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.Extract", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Extract", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "field", "expr", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Extract.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 4], "arg_names": ["self", "field", "expr", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.Extract", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "sqlalchemy.sql.elements.ClauseElement", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Extract", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Extract.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "expr": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Extract.expr", "name": "expr", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "field": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Extract.field", "name": "field", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Extract.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.Extract", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Extract", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Extract.type", "name": "type", "type": "sqlalchemy.sql.sqltypes.Integer"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "False_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.False_", "name": "False_", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.False_", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.False_", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.False_.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_instance": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["cls"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.False_._instance", "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.False_"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of False_", "ret_type": "sqlalchemy.sql.elements.False_", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.False_"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of False_", "ret_type": "sqlalchemy.sql.elements.False_", "variables": []}}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.False_.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.elements.False_", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of False_", "ret_type": "builtins.bool", "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.False_.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.False_"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of False_", "ret_type": "sqlalchemy.sql.sqltypes.Boolean", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.False_"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of False_", "ret_type": "sqlalchemy.sql.sqltypes.Boolean", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ForeignKey": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.schema.ForeignKey", "kind": "Gdef", "module_hidden": true, "module_public": false}, "FunctionElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.functions.FunctionElement", "kind": "Gdef", "module_hidden": true, "module_public": false}, "FunctionFilter": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.FunctionFilter", "name": "FunctionFilter", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.FunctionFilter", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.FunctionFilter", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2], "arg_names": ["self", "func", "criterion"], "flags": [], "fullname": "sqlalchemy.sql.elements.FunctionFilter.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2], "arg_names": ["self", "func", "criterion"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FunctionFilter", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.FunctionFilter.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "criterion": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.FunctionFilter.criterion", "name": "criterion", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "filter": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2], "arg_names": ["self", "criterion"], "flags": [], "fullname": "sqlalchemy.sql.elements.FunctionFilter.filter", "name": "filter", "type": {".class": "CallableType", "arg_kinds": [0, 2], "arg_names": ["self", "criterion"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "filter of FunctionFilter", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}, "variables": []}}}, "func": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.FunctionFilter.func", "name": "func", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.FunctionFilter.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of FunctionFilter", "ret_type": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "builtins.list"}, "variables": []}}}, "over": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "partition_by", "order_by"], "flags": [], "fullname": "sqlalchemy.sql.elements.FunctionFilter.over", "name": "over", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "partition_by", "order_by"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "over of FunctionFilter", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.FunctionFilter.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of FunctionFilter", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.FunctionFilter"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of FunctionFilter", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Generic": {".class": "SymbolTableNode", "cross_ref": "typing.Generic", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Grouping": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Grouping", "name": "Grouping", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Grouping", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__getattr__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "attr"], "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping.__getattr__", "name": "__getattr__", "type": null}}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Grouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Grouping", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Grouping.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Grouping", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Grouping", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "sqlalchemy.sql.elements.ClauseElement"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Grouping", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Grouping.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of Grouping", "ret_type": "builtins.bool", "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Grouping.element", "name": "element", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Grouping", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.Grouping.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._G", "id": -1, "name": "_G", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Grouping", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._G", "id": -1, "name": "_G", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._G", "id": -1, "name": "_G", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Grouping.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Immutable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.base.Immutable", "kind": "Gdef"}, "IndexExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.IndexExpression", "name": "IndexExpression", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.IndexExpression", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.IndexExpression", "sqlalchemy.sql.elements.BinaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Integer": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.Integer", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Iterable": {".class": "SymbolTableNode", "cross_ref": "typing.Iterable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Iterator": {".class": "SymbolTableNode", "cross_ref": "typing.Iterator", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Label": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Label", "name": "Label", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Label", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Label", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Label.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "name", "element"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "name", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "name", "element"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["self", "name", "element", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, "builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Label", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__reduce__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.Label.__reduce__", "name": "__reduce__", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__reduce__ of Label", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Label.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.element", "name": "element", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "element of Label", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "element", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "element of Label", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "variables": []}}}}, "foreign_keys": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.foreign_keys", "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of Label", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.list"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "foreign_keys", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "foreign_keys of Label", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.schema.ForeignKey"], "type_ref": "builtins.list"}, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Label.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Label", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Label.key", "name": "key", "type": "builtins.str"}}, "name": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Label.name", "name": "name", "type": "builtins.str"}}, "primary_key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.primary_key", "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of Label", "ret_type": "builtins.bool", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "primary_key", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "primary_key of Label", "ret_type": "builtins.bool", "variables": []}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.Label.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._L", "id": -1, "name": "_L", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Label"}, "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Label", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._L", "id": -1, "name": "_L", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Label"}, "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._L", "id": -1, "name": "_L", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Label"}, "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Label.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Label", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Label"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Label", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "cross_ref": "typing.List", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Mapping": {".class": "SymbolTableNode", "cross_ref": "typing.Mapping", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Null": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Null", "name": "Null", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.Null", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Null", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Null.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_instance": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["cls"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Null._instance", "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.Null"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of Null", "ret_type": "sqlalchemy.sql.elements.Null", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.Null"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of Null", "ret_type": "sqlalchemy.sql.elements.Null", "variables": []}}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.Null.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.elements.Null", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of Null", "ret_type": "builtins.bool", "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Null.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.Null"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Null", "ret_type": "sqlalchemy.sql.sqltypes.NullType", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.Null"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Null", "ret_type": "sqlalchemy.sql.sqltypes.NullType", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NullType": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.sqltypes.NullType", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Over": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Over", "name": "Over", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Over", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Over", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Over.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "range_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "element", "partition_by", "order_by", "rows"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.int", {".class": "NoneType"}]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Over", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.element", "name": "element", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}]}}}, "func": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.func", "name": "func", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "func of Over", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}]}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "func", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "func of Over", "ret_type": {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}]}, "variables": []}}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.Over.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of Over", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, "sqlalchemy.sql.elements.ClauseList"]}], "type_ref": "builtins.list"}, "variables": []}}}, "order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.order_by", "name": "order_by", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseList", {".class": "NoneType"}]}}}, "partition_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.partition_by", "name": "partition_by", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseList", {".class": "NoneType"}]}}}, "range_": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.range_", "name": "range_", "type": {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", "sqlalchemy.util.langhelpers.symbol"]}, {".class": "UnionType", "items": ["builtins.int", "sqlalchemy.util.langhelpers.symbol"]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}}}, "rows": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Over.rows", "name": "rows", "type": {".class": "UnionType", "items": [{".class": "TupleType", "implicit": false, "items": [{".class": "UnionType", "items": ["builtins.int", "sqlalchemy.util.langhelpers.symbol"]}, {".class": "UnionType", "items": ["builtins.int", "sqlalchemy.util.langhelpers.symbol"]}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, {".class": "NoneType"}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Over.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Over", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of Over", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Protocol": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Protocol", "kind": "Gdef", "module_hidden": true, "module_public": false}, "RANGE_CURRENT": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.RANGE_CURRENT", "name": "RANGE_CURRENT", "type": "sqlalchemy.util.langhelpers.symbol"}}, "RANGE_UNBOUNDED": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.RANGE_UNBOUNDED", "name": "RANGE_UNBOUNDED", "type": "sqlalchemy.util.langhelpers.symbol"}}, "ReleaseSavepointClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements._IdentifiedClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.ReleaseSavepointClause", "name": "ReleaseSavepointClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.ReleaseSavepointClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.ReleaseSavepointClause", "sqlalchemy.sql.elements._IdentifiedClause", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.ReleaseSavepointClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "RollbackToSavepointClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements._IdentifiedClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.RollbackToSavepointClause", "name": "RollbackToSavepointClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.RollbackToSavepointClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.RollbackToSavepointClause", "sqlalchemy.sql.elements._IdentifiedClause", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.RollbackToSavepointClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SavepointClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements._IdentifiedClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.SavepointClause", "name": "SavepointClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.SavepointClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.SavepointClause", "sqlalchemy.sql.elements._IdentifiedClause", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.SavepointClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Set": {".class": "SymbolTableNode", "cross_ref": "typing.Set", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Slice": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Slice", "name": "Slice", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.Slice", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Slice", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "start", "stop", "step"], "flags": [], "fullname": "sqlalchemy.sql.elements.Slice.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "start", "stop", "step"], "arg_types": ["sqlalchemy.sql.elements.Slice", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Slice", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Slice.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.Slice.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._SL", "id": -1, "name": "_SL", "upper_bound": "sqlalchemy.sql.elements.Slice", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of Slice", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._SL", "id": -1, "name": "_SL", "upper_bound": "sqlalchemy.sql.elements.Slice", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._SL", "id": -1, "name": "_SL", "upper_bound": "sqlalchemy.sql.elements.Slice", "values": [], "variance": 0}]}}}, "start": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Slice.start", "name": "start", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "step": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Slice.step", "name": "step", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "stop": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Slice.stop", "name": "stop", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Slice.type", "name": "type", "type": "sqlalchemy.sql.sqltypes.NullType"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "TableClause": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.TableClause", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Text": {".class": "SymbolTableNode", "cross_ref": "typing.Text", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TextAsFrom": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.selectable.TextAsFrom", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TextClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Executable", "sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.TextClause", "name": "TextClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.TextClause", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "bind"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "text", "bind"], "arg_types": ["sqlalchemy.sql.elements.TextClause", "builtins.str", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TextClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TextClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_create_text": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["cls", "text", "bind", "bindparams", "typemap", "autocommit"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TextClause._create_text", "name": "_create_text", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["cls", "text", "bind", "bindparams", "typemap", "autocommit"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}}, "builtins.str", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}]}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_text of TextClause", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_text", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["cls", "text", "bind", "bindparams", "typemap", "autocommit"], "arg_types": [{".class": "TypeType", "item": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}}, "builtins.str", {".class": "UnionType", "items": ["sqlalchemy.engine.base.Engine", "sqlalchemy.engine.base.Connection", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}]}], "type_ref": "builtins.dict"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.bool", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_text of TextClause", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}}}, "bindparams": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "names_to_values"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.bindparams", "name": "bindparams", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "binds", "names_to_values"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "bindparams of TextClause", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}}, "columns": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 2, 4], "arg_names": ["self", "cols", "types"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.columns", "name": "columns", "type": {".class": "CallableType", "arg_kinds": [0, 2, 4], "arg_names": ["self", "cols", "types"], "arg_types": ["sqlalchemy.sql.elements.TextClause", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "columns of TextClause", "ret_type": "sqlalchemy.sql.selectable.TextAsFrom", "variables": []}}}, "comparator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TextClause.comparator", "name": "comparator", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.TextClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "comparator of TextClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "comparator", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.TextClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "comparator of TextClause", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.elements.TextClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of TextClause", "ret_type": "builtins.bool", "variables": []}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": ["sqlalchemy.sql.elements.TextClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of TextClause", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.BindParameter"}], "type_ref": "builtins.list"}, "variables": []}}}, "key": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TextClause.key", "name": "key", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "selectable": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TextClause.selectable", "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of TextClause", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "selectable", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "selectable of TextClause", "ret_type": {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.TextClause.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of TextClause", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "sqlalchemy.sql.elements.Grouping"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._TC", "id": -1, "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}]}}}, "text": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TextClause.text", "name": "text", "type": "builtins.str"}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TextClause.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.TextClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of TextClause", "ret_type": "sqlalchemy.sql.sqltypes.NullType", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.TextClause"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of TextClause", "ret_type": "sqlalchemy.sql.sqltypes.NullType", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "True_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": ["builtins.bool"], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.True_", "name": "True_", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.True_", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.True_", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.True_.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_instance": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["cls"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.True_._instance", "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.True_"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of True_", "ret_type": "sqlalchemy.sql.elements.True_", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_instance", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["cls"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements.True_"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_instance of True_", "ret_type": "sqlalchemy.sql.elements.True_", "variables": []}}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "flags": [], "fullname": "sqlalchemy.sql.elements.True_.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "other"], "arg_types": ["sqlalchemy.sql.elements.True_", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of True_", "ret_type": "builtins.bool", "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.True_.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.True_"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of True_", "ret_type": "sqlalchemy.sql.sqltypes.Boolean", "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["sqlalchemy.sql.elements.True_"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of True_", "ret_type": "sqlalchemy.sql.sqltypes.Boolean", "variables": []}}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Tuple": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseList", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.Tuple", "name": "Tuple", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.Tuple", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.Tuple", "sqlalchemy.sql.elements.ClauseList", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.Tuple.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Tuple.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Tuple.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "clause", "clauses", "kw"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.Tuple.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "clause", "clauses", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 2, 3, 4], "arg_names": ["self", "clauses", "type_", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 2, 4], "arg_names": ["self", "clause", "clauses", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Tuple"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.Tuple.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.TypeClause", "name": "TypeClause", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.TypeClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.TypeClause", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "type"], "flags": [], "fullname": "sqlalchemy.sql.elements.TypeClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "type"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeClause"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TypeClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TypeClause.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "TypeCoerce": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.TypeCoerce", "name": "TypeCoerce", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.TypeCoerce", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.TypeCoerce", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, "builtins.str", {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, "builtins.str", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, "builtins.str", {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, "builtins.str", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "expression", "type_"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of TypeCoerce", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "clause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.clause", "name": "clause", "type": "sqlalchemy.sql.elements.ClauseElement"}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.TypeCoerce.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of TypeCoerce", "ret_type": {".class": "TupleType", "implicit": false, "items": ["sqlalchemy.sql.elements.ClauseElement"], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "typed_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.TypeCoerce.typed_expression", "name": "typed_expression", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "typed_expression of TypeCoerce", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "typed_expression", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.TypeCoerce"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "typed_expression of TypeCoerce", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef", "module_hidden": true, "module_public": false}, "UnaryExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.UnaryExpression", "name": "UnaryExpression", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.UnaryExpression", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.UnaryExpression", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.UnaryExpression.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "element", "operator", "modifier", "type_", "negate", "wraps_column_expression"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnaryExpression", "ret_type": {".class": "NoneType"}, "variables": []}]}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "_create_asc": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression._create_asc", "name": "_create_asc", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_asc of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_asc", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_asc of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}}}, "_create_desc": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression._create_desc", "name": "_create_desc", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_desc of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_desc", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "builtins.str"]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_desc of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}}}, "_create_distinct": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression._create_distinct", "name": "_create_distinct", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_distinct of UnaryExpression", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_distinct", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "expr"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_distinct of UnaryExpression", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._U", "id": -1, "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}}, "_create_nullsfirst": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression._create_nullsfirst", "name": "_create_nullsfirst", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_nullsfirst of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_nullsfirst", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_nullsfirst of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}}}, "_create_nullslast": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "flags": ["is_class", "is_decorated"], "fullname": "sqlalchemy.sql.elements.UnaryExpression._create_nullslast", "name": "_create_nullslast", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_nullslast of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_classmethod", "is_ready"], "fullname": null, "name": "_create_nullslast", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["cls", "column"], "arg_types": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "_create_nullslast of UnaryExpression", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.sqltypes.NullType"], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "variables": []}}}}, "compare": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "flags": [], "fullname": "sqlalchemy.sql.elements.UnaryExpression.compare", "name": "compare", "type": {".class": "CallableType", "arg_kinds": [0, 0, 4], "arg_names": ["self", "other", "kw"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "compare of UnaryExpression", "ret_type": "builtins.bool", "variables": []}}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.element", "name": "element", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.UnaryExpression.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of UnaryExpression", "ret_type": {".class": "TupleType", "implicit": false, "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}, "variables": []}}}, "modifier": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.modifier", "name": "modifier", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "negate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.negate", "name": "negate", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.operator", "name": "operator", "type": {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "self_group": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "flags": [], "fullname": "sqlalchemy.sql.elements.UnaryExpression.self_group", "name": "self_group", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "against"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._UE", "id": -1, "name": "_UE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "values": [], "variance": 0}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "self_group of UnaryExpression", "ret_type": {".class": "UnionType", "items": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._UE", "id": -1, "name": "_UE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "values": [], "variance": 0}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Grouping"}]}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._UE", "id": -1, "name": "_UE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "values": [], "variance": 0}]}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.type", "name": "type", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}}, "wraps_column_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.UnaryExpression.wraps_column_expression", "name": "wraps_column_expression", "type": "builtins.bool"}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Visitable": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.visitors.Visitable", "kind": "Gdef"}, "WithinGroup": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.WithinGroup", "name": "WithinGroup", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.sql.elements.WithinGroup", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.WithinGroup", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 2], "arg_names": ["self", "element", "order_by"], "flags": [], "fullname": "sqlalchemy.sql.elements.WithinGroup.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 2], "arg_names": ["self", "element", "order_by"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of WithinGroup", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.WithinGroup.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "element": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.WithinGroup.element", "name": "element", "type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}}}, "get_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "flags": [], "fullname": "sqlalchemy.sql.elements.WithinGroup.get_children", "name": "get_children", "type": {".class": "CallableType", "arg_kinds": [0, 4], "arg_names": ["self", "kwargs"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "get_children of WithinGroup", "ret_type": {".class": "Instance", "args": [{".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.functions.FunctionElement"}, "sqlalchemy.sql.elements.ClauseList"]}], "type_ref": "builtins.list"}, "variables": []}}}, "order_by": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.WithinGroup.order_by", "name": "order_by", "type": {".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseList", {".class": "NoneType"}]}}}, "over": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "partition_by", "order_by"], "flags": [], "fullname": "sqlalchemy.sql.elements.WithinGroup.over", "name": "over", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "partition_by", "order_by"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, {".class": "Instance", "args": [{".class": "UnionType", "items": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}]}], "type_ref": "typing.Iterable"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "over of WithinGroup", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.Over"}, "variables": []}}}, "type": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "sqlalchemy.sql.elements.WithinGroup.type", "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of WithinGroup", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "type", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements.WithinGroup"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "type of WithinGroup", "ret_type": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "variables": []}}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "_AB": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._AB", "name": "_AB", "upper_bound": "sqlalchemy.sql.elements.AsBoolean", "values": [], "variance": 0}}, "_BCL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._BCL", "name": "_BCL", "upper_bound": "sqlalchemy.sql.elements.BooleanClauseList", "values": [], "variance": 0}}, "_BE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._BE", "name": "_BE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.BinaryExpression"}, "values": [], "variance": 0}}, "_CE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._CE", "name": "_CE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.ColumnElement"}, "values": [], "variance": 0}}, "_CL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._CL", "name": "_CL", "upper_bound": "sqlalchemy.sql.elements.ClauseList", "values": [], "variance": 0}}, "_G": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._G", "name": "_G", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Grouping"}, "values": [], "variance": 0}}, "_IdentifiedClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.base.Executable", "sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements._IdentifiedClause", "name": "_IdentifiedClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements._IdentifiedClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements._IdentifiedClause", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "ident"], "flags": [], "fullname": "sqlalchemy.sql.elements._IdentifiedClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "ident"], "arg_types": ["sqlalchemy.sql.elements._IdentifiedClause", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of _IdentifiedClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements._IdentifiedClause.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "ident": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements._IdentifiedClause.ident", "name": "ident", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_L": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._L", "name": "_L", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Label"}, "values": [], "variance": 0}}, "_LiteralAsTextCallback": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["builtins.object"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements._LiteralAsTextCallback", "name": "_LiteralAsTextCallback", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T_contra", "id": 1, "name": "_T_contra", "upper_bound": "builtins.object", "values": [], "variance": 2}]}, "flags": ["is_protocol"], "fullname": "sqlalchemy.sql.elements._LiteralAsTextCallback", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements._LiteralAsTextCallback", "builtins.object"], "names": {".class": "SymbolTable", "__call__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "flags": [], "fullname": "sqlalchemy.sql.elements._LiteralAsTextCallback.__call__", "name": "__call__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "clause"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T_contra", "id": 1, "name": "_T_contra", "upper_bound": "builtins.object", "values": [], "variance": 2}], "type_ref": "sqlalchemy.sql.elements._LiteralAsTextCallback"}, {".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T_contra", "id": 1, "name": "_T_contra", "upper_bound": "builtins.object", "values": [], "variance": 2}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__call__ of _LiteralAsTextCallback", "ret_type": {".class": "Instance", "args": ["sqlalchemy.sql.elements.ClauseElement"], "type_ref": "builtins.list"}, "variables": []}}}}, "tuple_type": null, "type_vars": ["_T_contra"], "typeddict_type": null}}, "_SL": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._SL", "name": "_SL", "upper_bound": "sqlalchemy.sql.elements.Slice", "values": [], "variance": 0}}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._T", "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "_TC": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._TC", "name": "_TC", "upper_bound": "sqlalchemy.sql.elements.TextClause", "values": [], "variance": 0}}, "_T_contra": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._T_contra", "name": "_T_contra", "upper_bound": "builtins.object", "values": [], "variance": 2}}, "_TupleType": {".class": "SymbolTableNode", "cross_ref": "typing.Tuple", "kind": "Gdef"}, "_U": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._U", "name": "_U", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "_UE": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._UE", "name": "_UE", "upper_bound": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.UnaryExpression"}, "values": [], "variance": 0}}, "_V": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.sql.elements._V", "name": "_V", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.sql.elements.__package__", "name": "__package__", "type": "builtins.str"}}, "_anonymous_label": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements._truncated_label"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements._anonymous_label", "name": "_anonymous_label", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements._anonymous_label", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements._anonymous_label", "sqlalchemy.sql.elements._truncated_label", "sqlalchemy.sql.elements.quoted_name", "sqlalchemy.util.langhelpers.MemoizedSlots", "builtins.str", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_truncated_label": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.quoted_name"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements._truncated_label", "name": "_truncated_label", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements._truncated_label", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements._truncated_label", "sqlalchemy.sql.elements.quoted_name", "sqlalchemy.util.langhelpers.MemoizedSlots", "builtins.str", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable", "__new__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "value", "quote"], "flags": [], "fullname": "sqlalchemy.sql.elements._truncated_label.__new__", "name": "__new__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["cls", "value", "quote"], "arg_types": [{".class": "TypeType", "item": "sqlalchemy.sql.elements._truncated_label"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__new__ of _truncated_label", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "__reduce__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements._truncated_label.__reduce__", "name": "__reduce__", "type": null}}, "apply_map": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "map_"], "flags": [], "fullname": "sqlalchemy.sql.elements._truncated_label.apply_map", "name": "apply_map", "type": null}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "and_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.elements.and_", "name": "and_", "type": {".class": "CallableType", "arg_kinds": [2], "arg_names": ["clauses"], "arg_types": [{".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [{".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [2, 5, 5, 5, 5, 4], "arg_names": ["clauses", "operator", "group", "group_contents", "_literal_as_text", "kwargs"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements._LiteralAsTextCallback"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": ["sqlalchemy.sql.elements.BooleanClauseList"], "def_extras": {"first_arg": "self"}, "fallback": "sqlalchemy.sql.visitors.VisitableType", "implicit": false, "is_ellipsis_args": false, "name": "BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [2, 5, 5, 5, 4], "arg_names": ["clauses", "operator", "group", "group_contents", "kwargs"], "arg_types": [{".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": ["sqlalchemy.sql.elements.BooleanClauseList"], "def_extras": {"first_arg": "self"}, "fallback": "sqlalchemy.sql.visitors.VisitableType", "implicit": false, "is_ellipsis_args": false, "name": "BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}]}], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "between": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1], "arg_names": ["expr", "lower_bound", "upper_bound", "symmetric"], "flags": [], "fullname": "sqlalchemy.sql.elements.between", "name": "between", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1], "arg_names": ["expr", "lower_bound", "upper_bound", "symmetric"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "between", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "collate": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["expression", "collation"], "flags": [], "fullname": "sqlalchemy.sql.elements.collate", "name": "collate", "type": null}}, "conv": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements._truncated_label"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.conv", "name": "conv", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.conv", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.conv", "sqlalchemy.sql.elements._truncated_label", "sqlalchemy.sql.elements.quoted_name", "sqlalchemy.util.langhelpers.MemoizedSlots", "builtins.str", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "literal": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["value", "type_"], "flags": [], "fullname": "sqlalchemy.sql.elements.literal", "name": "literal", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["value", "type_"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "literal_column": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.sql.elements.literal_column", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.literal_column", "name": "literal_column", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "arg_types": ["builtins.str", {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_column", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "literal_column", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.sql.elements.literal_column", "name": "literal_column", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "arg_types": ["builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_column", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "literal_column", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "arg_types": ["builtins.str", {".class": "UnionType", "items": [{".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_column", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["text", "type_"], "arg_types": ["builtins.str", {".class": "UnionType", "items": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "literal_column", "ret_type": {".class": "Instance", "args": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}], "type_ref": "sqlalchemy.sql.elements.ColumnClause"}, "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}]}}}, "not_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["clause"], "flags": [], "fullname": "sqlalchemy.sql.elements.not_", "name": "not_", "type": null}}, "operators": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.operators", "kind": "Gdef", "module_public": false}, "or_": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": [], "fullname": "sqlalchemy.sql.elements.or_", "name": "or_", "type": {".class": "CallableType", "arg_kinds": [2], "arg_names": ["clauses"], "arg_types": [{".class": "UnionType", "items": ["sqlalchemy.sql.elements.ClauseElement", "builtins.str", "builtins.bool"]}], "bound_args": [{".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [2, 5, 5, 5, 5, 4], "arg_names": ["clauses", "operator", "group", "group_contents", "_literal_as_text", "kwargs"], "arg_types": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.elements._LiteralAsTextCallback"}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": ["sqlalchemy.sql.elements.BooleanClauseList"], "def_extras": {"first_arg": "self"}, "fallback": "sqlalchemy.sql.visitors.VisitableType", "implicit": false, "is_ellipsis_args": false, "name": "BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, {".class": "CallableType", "arg_kinds": [2, 5, 5, 5, 4], "arg_names": ["clauses", "operator", "group", "group_contents", "kwargs"], "arg_types": [{".class": "UnionType", "items": ["builtins.str", "builtins.bool", "sqlalchemy.sql.visitors.Visitable", {".class": "NoneType"}]}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}, "builtins.bool", "builtins.bool", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": ["sqlalchemy.sql.elements.BooleanClauseList"], "def_extras": {"first_arg": "self"}, "fallback": "sqlalchemy.sql.visitors.VisitableType", "implicit": false, "is_ellipsis_args": false, "name": "BooleanClauseList", "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": []}]}], "def_extras": {"first_arg": "cls"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": "sqlalchemy.sql.elements.BooleanClauseList", "variables": [{".class": "TypeVarDef", "fullname": "sqlalchemy.sql.elements._T", "id": -1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}}}, "outparam": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["key", "type_"], "flags": [], "fullname": "sqlalchemy.sql.elements.outparam", "name": "outparam", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["key", "type_"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "outparam", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef", "module_hidden": true, "module_public": false}, "quoted_name": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.util.langhelpers.MemoizedSlots", "builtins.str"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.sql.elements.quoted_name", "name": "quoted_name", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.sql.elements.quoted_name", "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "sqlalchemy.sql.elements", "mro": ["sqlalchemy.sql.elements.quoted_name", "sqlalchemy.util.langhelpers.MemoizedSlots", "builtins.str", "typing.Sequence", "typing.Collection", "typing.Iterable", "typing.Container", "typing.Reversible", "builtins.object"], "names": {".class": "SymbolTable", "__new__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["cls", "value", "quote"], "flags": [], "fullname": "sqlalchemy.sql.elements.quoted_name.__new__", "name": "__new__", "type": null}}, "__reduce__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.sql.elements.quoted_name.__reduce__", "name": "__reduce__", "type": null}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.sql.elements.quoted_name.quote", "name": "quote", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "util": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.util", "kind": "Gdef", "module_public": false}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/sql/elements.pyi"}