{".class": "MypyFile", "_fullname": "sqlalchemy.dialects.postgresql.dml", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "Any": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef", "module_hidden": true, "module_public": false}, "ClauseElement": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.elements.ClauseElement", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Insert": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.dml.Insert"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.dml.Insert", "name": "Insert", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.Insert", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.dml", "mro": ["sqlalchemy.dialects.postgresql.dml.Insert", "sqlalchemy.sql.dml.Insert", "sqlalchemy.sql.dml.ValuesBase", "sqlalchemy.sql.dml.UpdateBase", "sqlalchemy.sql.selectable.HasCTE", "sqlalchemy.sql.base.DialectKWArgs", "sqlalchemy.sql.selectable.HasPrefixes", "sqlalchemy.sql.base.Executable", "sqlalchemy.sql.base.Generative", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "excluded": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.Insert.excluded", "name": "excluded", "type": null}}, "on_conflict_do_nothing": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.Insert.on_conflict_do_nothing", "name": "on_conflict_do_nothing", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where"], "arg_types": ["sqlalchemy.dialects.postgresql.dml.Insert", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "on_conflict_do_nothing of Insert", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}, "on_conflict_do_update": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where", "set_", "where"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.Insert.on_conflict_do_update", "name": "on_conflict_do_update", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where", "set_", "where"], "arg_types": ["sqlalchemy.dialects.postgresql.dml.Insert", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "on_conflict_do_update of Insert", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 1}, "variables": []}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "OnConflictClause": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.sql.elements.ClauseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause", "name": "OnConflictClause", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.dml", "mro": ["sqlalchemy.dialects.postgresql.dml.OnConflictClause", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where"], "arg_types": ["sqlalchemy.dialects.postgresql.dml.OnConflictClause", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of OnConflictClause", "ret_type": {".class": "NoneType"}, "variables": []}}}, "constraint_target": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause.constraint_target", "name": "constraint_target", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "inferred_target_elements": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause.inferred_target_elements", "name": "inferred_target_elements", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "inferred_target_whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictClause.inferred_target_whereclause", "name": "inferred_target_whereclause", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "OnConflictDoNothing": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.dialects.postgresql.dml.OnConflictClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoNothing", "name": "OnConflictDoNothing", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoNothing", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.dml", "mro": ["sqlalchemy.dialects.postgresql.dml.OnConflictDoNothing", "sqlalchemy.dialects.postgresql.dml.OnConflictClause", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoNothing.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "OnConflictDoUpdate": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["sqlalchemy.dialects.postgresql.dml.OnConflictClause"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate", "name": "OnConflictDoUpdate", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.dml", "mro": ["sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate", "sqlalchemy.dialects.postgresql.dml.OnConflictClause", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where", "set_", "where"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1], "arg_names": ["self", "constraint", "index_elements", "index_where", "set_", "where"], "arg_types": ["sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of OnConflictDoUpdate", "ret_type": {".class": "NoneType"}, "variables": []}}}, "__visit_name__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate.__visit_name__", "name": "__visit_name__", "type": "builtins.str"}}, "update_values_to_set": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate.update_values_to_set", "name": "update_values_to_set", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}, "update_whereclause": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.OnConflictDoUpdate.update_whereclause", "name": "update_whereclause", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "_StandardInsert": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.dml.Insert", "kind": "Gdef"}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.__package__", "name": "__package__", "type": "builtins.str"}}, "insert": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.dml.insert", "name": "insert", "type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}}}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/dialects/postgresql/dml.pyi"}