{".class": "MypyFile", "_fullname": "sqlalchemy.dialects.postgresql.array", "is_partial_stub_package": false, "is_stub": true, "names": {".class": "SymbolTable", "ARRAY": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.sqltypes.ARRAY"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.array.ARRAY", "name": "ARRAY", "type_vars": [{".class": "TypeVarDef", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}]}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.array.ARRAY", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.array", "mro": ["sqlalchemy.dialects.postgresql.array.ARRAY", "sqlalchemy.sql.sqltypes.ARRAY", "sqlalchemy.sql.sqltypes.Indexable", "sqlalchemy.sql.sqltypes.Concatenable", "sqlalchemy.sql.type_api.TypeEngine", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable", "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "OverloadedFuncDef", "flags": [], "fullname": "sqlalchemy.dialects.postgresql.array.ARRAY.__init__", "impl": null, "items": [{".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.dialects.postgresql.array.ARRAY.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.dialects.postgresql.array.ARRAY"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}, {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "flags": ["is_overload", "is_decorated"], "fullname": "sqlalchemy.dialects.postgresql.array.ARRAY.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.dialects.postgresql.array.ARRAY"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}}, "is_overload": true, "var": {".class": "Var", "flags": [], "fullname": null, "name": "__init__", "type": null}}], "type": {".class": "Overloaded", "items": [{".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.dialects.postgresql.array.ARRAY"}, {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}, {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "item_type", "as_tuple", "dimensions", "zero_indexes"], "arg_types": [{".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.dialects.postgresql.array.ARRAY"}, {".class": "TypeType", "item": {".class": "Instance", "args": [{".class": "TypeVarType", "fullname": "sqlalchemy.dialects.postgresql.array._T", "id": 1, "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}], "type_ref": "sqlalchemy.sql.type_api.TypeEngine"}}, "builtins.bool", {".class": "UnionType", "items": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ARRAY", "ret_type": {".class": "NoneType"}, "variables": []}]}}}}, "tuple_type": null, "type_vars": ["_T"], "typeddict_type": null}}, "All": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["other", "arrexpr", "operator"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.array.All", "name": "All", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["other", "arrexpr", "operator"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "All", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "Any": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["other", "arrexpr", "operator"], "flags": [], "fullname": "sqlalchemy.dialects.postgresql.array.Any", "name": "Any", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["other", "arrexpr", "operator"], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "CallableType", "arg_kinds": [2, 4], "arg_names": [null, null], "arg_types": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": true, "name": null, "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "Any", "ret_type": {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}, "variables": []}}}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef", "module_hidden": true, "module_public": false}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeEngine": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.type_api.TypeEngine", "kind": "Gdef", "module_hidden": true, "module_public": false}, "TypeVar": {".class": "SymbolTableNode", "cross_ref": "typing.TypeVar", "kind": "Gdef", "module_hidden": true, "module_public": false}, "_AnyType": {".class": "SymbolTableNode", "cross_ref": "typing.Any", "kind": "Gdef"}, "_T": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeVarExpr", "fullname": "sqlalchemy.dialects.postgresql.array._T", "name": "_T", "upper_bound": "builtins.object", "values": [], "variance": 0}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.array.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.array.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.array.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "sqlalchemy.dialects.postgresql.array.__package__", "name": "__package__", "type": "builtins.str"}}, "_sqltypes": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.types", "kind": "Gdef"}, "array": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": [{".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 4}], "type_ref": "sqlalchemy.sql.elements.Tuple"}], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "sqlalchemy.dialects.postgresql.array.array", "name": "array", "type_vars": []}, "flags": [], "fullname": "sqlalchemy.dialects.postgresql.array.array", "metaclass_type": "sqlalchemy.sql.visitors.VisitableType", "metadata": {}, "module_name": "sqlalchemy.dialects.postgresql.array", "mro": ["sqlalchemy.dialects.postgresql.array.array", "sqlalchemy.sql.elements.Tuple", "sqlalchemy.sql.elements.ClauseList", "sqlalchemy.sql.elements.ColumnElement", "sqlalchemy.sql.operators.ColumnOperators", "sqlalchemy.sql.operators.Operators", "sqlalchemy.sql.elements.ClauseElement", "sqlalchemy.sql.visitors.Visitable", "builtins.object"], "names": {".class": "SymbolTable"}, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "expression": {".class": "SymbolTableNode", "cross_ref": "sqlalchemy.sql.expression", "kind": "Gdef", "module_public": false}, "overload": {".class": "SymbolTableNode", "cross_ref": "typing.overload", "kind": "Gdef", "module_hidden": true, "module_public": false}}, "path": "/home/free/code/refinery/env/lib/python3.8/site-packages/sqlalchemy-stubs/dialects/postgresql/array.pyi"}