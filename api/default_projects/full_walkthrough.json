{
	"demo_walkthrough": [
		{
			"type": "CyTooltip",
			"target": "a660c1d8-5534-4138-8729-9eec8f252b69",
			"header": "Listening for HTTP requests",
      "body": "An API Endpoint Block will wait until a request has been sent to the specified path (in this case, the path is '/example/web/path'). When someone sends a request to this endpoint, the request's data is sent along to connected blocks."
		},
		{
			"type": "CyTooltip",
			"target": "b7f55a48-f9d6-4a41-8b8e-2c8fc4b6d413",
			"header": "test",
      "body": "test",
      "teardown": {
        "action": "openBlockModal"
      }
		},
		{
      "type": "HTMLTooltip",
      "target": "button[data-tooltip-id=\"block-editor-run-code\"]",
			"header": "Running your code",
			"body": "Click here to run your code",
      "teardown": {
        "action": "closeBlockModal"
      }
    },
		{
			"type": "CyTooltip",
			"target": "b7f55a48-f9d6-4a41-8b8e-2c8fc4b6d413",
			"header": "Running some code",
			"body": "A Code Block can contain code from any supported language, which is quite a few!. Try clicking on the block to see what it does."
		}
	],
  "workflow_files": [],
  "workflow_file_links": [],
  "readme": "# Untitled Project README\n\nThis is a Refinery project README, update it to explain more about the project.",
  "name": "API Endpoint Example - Crystalcowl Fish",
  "workflow_relationships": [
    {
      "node": "a660c1d8-5534-4138-8729-9eec8f252b69",
      "name": "then",
      "type": "then",
      "next": "b7f55a48-f9d6-4a41-8b8e-2c8fc4b6d413",
      "version": "1.0.0",
      "expression": "",
      "id": "2946864b-eb55-41eb-a484-0197677cb8d3"
    },
    {
      "node": "b7f55a48-f9d6-4a41-8b8e-2c8fc4b6d413",
      "name": "then",
      "type": "then",
      "next": "7d0f7c79-8c22-4260-8168-141dbea15050",
      "version": "1.0.0",
      "expression": "",
      "id": "cafb45ae-543e-4d8e-bb5a-8924f23f0f72"
    },
    {
      "node": "ec5e122b-9200-4c04-9813-15ed44703b52",
      "name": "then",
      "type": "then",
      "next": "4b5ee762-97ce-41d0-bc31-7f2dd3438d72",
      "version": "1.0.0",
      "expression": "",
      "id": "abdbd7c7-4da7-4ad1-b022-e992af4a701d"
    },
    {
      "node": "4b5ee762-97ce-41d0-bc31-7f2dd3438d72",
      "name": "then",
      "type": "then",
      "next": "2a514de5-2579-4591-bb00-82a9345fd37e",
      "version": "1.0.0",
      "expression": "",
      "id": "fe5f7eb8-4e1d-4898-b2b8-40a5868fc19b"
    },
    {
      "node": "2a514de5-2579-4591-bb00-82a9345fd37e",
      "name": "then",
      "type": "then",
      "next": "ec89acf7-cbbd-4d6d-ad2e-91fc8305f1a5",
      "version": "1.0.0",
      "expression": "",
      "id": "c54e150d-70c3-4fb6-8ac8-10add7f35ff2"
    },
    {
      "node": "ec89acf7-cbbd-4d6d-ad2e-91fc8305f1a5",
      "name": "then",
      "type": "then",
      "next": "13dea534-8722-4d31-84d0-9d68027beb5c",
      "version": "1.0.0",
      "expression": "",
      "id": "55052d6d-3127-406e-958e-e759e087c0c9"
    },
    {
      "node": "ec89acf7-cbbd-4d6d-ad2e-91fc8305f1a5",
      "name": "then",
      "type": "then",
      "next": "88890022-0157-4320-9929-bcb0be6827af",
      "version": "1.0.0",
      "expression": "",
      "id": "3d9ba6dd-cee8-4b1d-a4ab-cc0703054c6d"
    },
    {
      "node": "88890022-0157-4320-9929-bcb0be6827af",
      "name": "then",
      "type": "then",
      "next": "e7cf5ce8-03b5-4cb1-a606-948f9b673219",
      "version": "1.0.0",
      "expression": "",
      "id": "6066e78a-a841-4a69-a80c-46e2570db2b9"
    },
    {
      "node": "8b1dfad7-a065-4c2b-afd7-4915af39cf61",
      "name": "then",
      "type": "then",
      "next": "903bfa0a-0a8e-4569-a826-1e3a0824fb13",
      "version": "1.0.0",
      "expression": "",
      "id": "4cf44b7c-9688-473c-94f5-07d80b3dad3d"
    },
    {
      "node": "903bfa0a-0a8e-4569-a826-1e3a0824fb13",
      "name": "then",
      "type": "then",
      "next": "a766dcc1-8076-4757-acc4-7a26959123e0",
      "version": "1.0.0",
      "expression": "",
      "id": "52f3024c-757e-4d31-a24b-6aac00239ad0"
    },
    {
      "node": "c5cfbe65-39a8-448f-8374-5364abbc5afe",
      "name": "then",
      "type": "then",
      "next": "de064216-fcbf-4285-b269-701918a0005c",
      "version": "1.0.0",
      "expression": "",
      "id": "be85a084-a524-4061-a0d2-f458409477f7"
    },
    {
      "node": "de064216-fcbf-4285-b269-701918a0005c",
      "name": "then",
      "type": "then",
      "next": "e1459fbc-f365-4e2a-b2e7-214e222d9668",
      "version": "1.0.0",
      "expression": "",
      "id": "47441316-9d3c-4bae-8053-ed3e38b5d7ca"
    },
    {
      "node": "93b7219e-30d4-42d8-8d49-276eb3d904a5",
      "name": "then",
      "type": "then",
      "next": "f516b248-8f9d-49fd-b421-059281728ecf",
      "version": "1.0.0",
      "expression": "",
      "id": "76de5392-7740-4ebc-9c8a-78f0bcb4681c"
    },
    {
      "node": "f516b248-8f9d-49fd-b421-059281728ecf",
      "name": "then",
      "type": "then",
      "next": "379f8fed-d73f-4a44-a9cc-1c8abab9cc37",
      "version": "1.0.0",
      "expression": "",
      "id": "37dfd5d0-0f56-46b1-afc5-8f9150278c44"
    },
    {
      "node": "379f8fed-d73f-4a44-a9cc-1c8abab9cc37",
      "name": "then",
      "type": "then",
      "next": "4a1d9e87-1116-4609-9854-74b68d19535f",
      "version": "1.0.0",
      "expression": "",
      "id": "7ea19234-e6c7-4099-b23a-a6b8c4b8199a"
    },
    {
      "node": "1c41e558-3f38-4af9-afc4-f156637747aa",
      "name": "then",
      "type": "then",
      "next": "698772c6-36a3-42f7-ada0-f92a6426bb7e",
      "version": "1.0.0",
      "expression": "",
      "id": "1057fc0c-eb09-42ae-ba4b-0d2e8f39a8bc"
    },
    {
      "node": "698772c6-36a3-42f7-ada0-f92a6426bb7e",
      "name": "then",
      "type": "then",
      "next": "f392302c-7dfd-4d27-8e4e-1557ace032b9",
      "version": "1.0.0",
      "expression": "",
      "id": "937ad636-e3c0-4ad9-ae68-2067876c7bba"
    },
    {
      "node": "698772c6-36a3-42f7-ada0-f92a6426bb7e",
      "name": "then",
      "type": "then",
      "next": "744f2bf8-bad0-4c91-bb83-620f5f5231c9",
      "version": "1.0.0",
      "expression": "",
      "id": "d9422bf8-b306-40f0-97da-a21ab291c137"
    }
  ],
  "workflow_states": [
    {
      "version": "1.0.0",
      "type": "api_gateway_response",
      "id": "7d0f7c79-8c22-4260-8168-141dbea15050",
      "name": "API Endpoint Response Block"
    },
    {
      "api_path": "/example/web/path",
      "name": "Example API Endpoint Block",
      "version": "1.0.0",
      "http_method": "GET",
      "type": "api_endpoint",
      "id": "a660c1d8-5534-4138-8729-9eec8f252b69"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    \"\"\"\n    The below data will be returned as the HTTP response\n    once we transition to an API Response block.\n    \"\"\"\n    return \"Hello World!\"\n",
      "name": "Example Code Block",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "b7f55a48-f9d6-4a41-8b8e-2c8fc4b6d413",
      "max_execution_time": 900
    },
    {
      "version": "1.0.0",
      "type": "api_gateway_response",
      "id": "13dea534-8722-4d31-84d0-9d68027beb5c",
      "name": "API Endpoint Response Block"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    return 100\n",
      "name": "You can chain multiple",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "4b5ee762-97ce-41d0-bc31-7f2dd3438d72",
      "max_execution_time": 900
    },
    {
      "layers": [],
      "code": "\nasync function main(blockInput, backpack) {\n    /* Divide the number by two! */\n\treturn ( blockInput / 2 );\n}\n",
      "name": "Code Blocks together before",
      "language": "nodejs8.10",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "2a514de5-2579-4591-bb00-82a9345fd37e",
      "max_execution_time": 900
    },
    {
      "layers": [],
      "code": "<?php\n\nfunction main($block_input, $backpack) {\n    /* Now let's multiple it by 5! */\n\treturn ($block_input * 5);\n}",
      "name": "returning a response :)",
      "language": "php7.3",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "ec89acf7-cbbd-4d6d-ad2e-91fc8305f1a5",
      "max_execution_time": 900
    },
    {
      "api_path": "/example/with/multiple/blocks",
      "name": "Multi-Blocks API Endpoint Block",
      "version": "1.0.0",
      "http_method": "GET",
      "type": "api_endpoint",
      "id": "ec5e122b-9200-4c04-9813-15ed44703b52"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    return \"Hello World!\"\n",
      "name": "and you can still keep going",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "88890022-0157-4320-9929-bcb0be6827af",
      "max_execution_time": 900
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    return \"Hello World!\"\n",
      "name": "after you've returned a response!",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "e7cf5ce8-03b5-4cb1-a606-948f9b673219",
      "max_execution_time": 900
    },
    {
      "version": "1.0.0",
      "type": "api_gateway_response",
      "id": "a766dcc1-8076-4757-acc4-7a26959123e0",
      "name": "API Endpoint Response Block"
    },
    {
      "api_path": "/example/printname",
      "name": "Print \"Name\" Parameter API Endpoint Block",
      "version": "1.0.0",
      "http_method": "GET",
      "type": "api_endpoint",
      "id": "8b1dfad7-a065-4c2b-afd7-4915af39cf61"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    \"\"\"\n    For more information on parsing HTTP parameters/headers/etc see the following docs:\n    https://docs.refinery.io/tutorials/api-endpoints/\n    \"\"\"\n\n    query_string_parameters = block_input[\"queryStringParameters\"]\n    if not query_string_parameters or not \"name\" in query_string_parameters:\n        return {\n            \"success\": False,\n            \"msg\": \"No 'name' query string parameter specified, how can I great you?\"\n        }\n        \n    return \"Hello \" + query_string_parameters[ \"name\" ] + \" nice to meet you!\"",
      "name": "Create Message from Name",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "903bfa0a-0a8e-4569-a826-1e3a0824fb13",
      "max_execution_time": 900
    },
    {
      "version": "1.0.0",
      "type": "api_gateway_response",
      "id": "e1459fbc-f365-4e2a-b2e7-214e222d9668",
      "name": "API Endpoint Response Block"
    },
    {
      "api_path": "/example/browserscreenshot",
      "name": "Browser Screenshot API Endpoint",
      "version": "1.0.0",
      "http_method": "GET",
      "type": "api_endpoint",
      "id": "c5cfbe65-39a8-448f-8374-5364abbc5afe"
    },
    {
      "layers": [],
      "code": "const chrome = require( \"chrome-aws-lambda\" );\nconst puppeteer = require( \"puppeteer-core\" );\n\nasync function main(blockInput, backpack) {\n    // Ensure the user has set the 'url' parameter\n    if(!blockInput.queryStringParameters || blockInput.queryStringParameters.url === undefined) {\n        return {\n            \"success\": false,\n            \"msg\": \"You must provide a 'url' parameter for this endpoint!\"\n        }\n    }\n\n    // Use Puppeteer to grab a screenshot of the passed URL\n    const screenshot_data = await getScreenshot(\n        blockInput.queryStringParameters.url,\n        \"png\"\n    );\n\n    return {\n        \"headers\": {\n            \"Content-Type\": \"image/png\"\n        },\n        \"body\": screenshot_data.toString(\"base64\"),\n        \"isBase64Encoded\": true,\n    }\n}\n\nasync function getScreenshot(url, type) {\n    const browser = await puppeteer.launch({\n        args: chrome.args,\n        executablePath: await chrome.executablePath,\n        headless: chrome.headless,\n    });\n\n    const page = await browser.newPage();\n    await page.goto(url);\n    const file = await page.screenshot({ type });\n    await browser.close();\n    return file;\n}\n",
      "name": "Get Browser Webpage Screenshot Image",
      "language": "nodejs8.10",
      "saved_block_metadata": {
        "added_timestamp": 1564512585743,
        "timestamp": 1564268387,
        "version": 2,
        "id": "d9e9b8d4-1281-4d8d-8fe2-22e7373e6806"
      },
      "saved_input_data": "{\r\n    \"url\": \"https://example.com/\",\r\n    \"type\": \"png\"\r\n}",
      "libraries": [
        "chrome-aws-lambda",
        "puppeteer-core",
        "iltorb"
      ],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "de064216-fcbf-4285-b269-701918a0005c",
      "max_execution_time": 900
    },
    {
      "description": "Deployed by Refinery",
      "schedule_expression": "rate(1 minutes)",
      "version": "1.0.0",
      "input_string": "",
      "type": "schedule_trigger",
      "id": "93b7219e-30d4-42d8-8d49-276eb3d904a5",
      "name": "Every Minute"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    \"\"\"\n    This block will be run every minute!\n\n    Psst: Scroll down to change this Block's language.\n    \"\"\"\n    return [\n        \"Return\",\n        \"a\",\n        \"list\",\n        \"of\",\n        \"things\",\n        \"to\",\n        \"put\",\n        \"on\",\n        \"the\",\n        \"queue!\"\n    ]",
      "name": "Put Items on the Queue",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "f516b248-8f9d-49fd-b421-059281728ecf",
      "max_execution_time": 900
    },
    {
      "version": "1.0.0",
      "type": "sqs_queue",
      "id": "379f8fed-d73f-4a44-a9cc-1c8abab9cc37",
      "batch_size": 1,
      "name": "Work Queue Block"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    \"\"\"\n    This block will automatically be scaled up in concurrency\n    to process all the items in the queue!\n    \"\"\"\n    print( \"We received \" + str( len( block_input ) ) + \" item(s) from the queue!\" )\n    return block_input\n",
      "name": "Process Queue Item(s)",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "4a1d9e87-1116-4609-9854-74b68d19535f",
      "max_execution_time": 900
    },
    {
      "version": "1.0.0",
      "type": "sns_topic",
      "id": "698772c6-36a3-42f7-ada0-f92a6426bb7e",
      "name": "Example PubSub/Topic Block"
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    return \"\"\"\n    This message will be pushed to all the blocks\n    that are connected to the Topic Block below!\n    \"\"\"\n",
      "name": "Send Message to Topic",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "1c41e558-3f38-4af9-afc4-f156637747aa",
      "max_execution_time": 900
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    print( \"Hey the following message was pushed to me: \" )\n    print( block_input )\n    return False\n",
      "name": "Subscriber Code Block #1",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "f392302c-7dfd-4d27-8e4e-1557ace032b9",
      "max_execution_time": 900
    },
    {
      "layers": [],
      "code": "\ndef main(block_input, backpack):\n    print( \"Oi, I got a message!: \" )\n    print( block_input )\n    return False\n",
      "name": "Subscriber Code Block #2",
      "language": "python2.7",
      "libraries": [],
      "reserved_concurrency_count": false,
      "version": "1.0.0",
      "memory": 768,
      "environment_variables": {},
      "type": "lambda",
      "id": "744f2bf8-bad0-4c91-bb83-620f5f5231c9",
      "max_execution_time": 900
    }
  ],
  "version": 1
}
