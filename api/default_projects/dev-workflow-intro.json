{
  "demo_walkthrough": [
    {
      "type": "CyTooltip",
      "target": "02ce00f8-020c-4ea2-9f2e-b731491e4eea",
      "header": "Listening for HTTP requests",
      "body": "An API Endpoint Block will wait until a request has been sent to the specified path (in this case, the path is '/example/web/path'). When someone sends a request to this endpoint, the request's data is sent along to connected blocks.",
      "teardown": {
        "action": "openBlockEditorPane"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"endpoint-http-method\"]",
      "header": "Endpoint Method",
      "body": "Here is where you would configure what HTTP method your endpoint will accept."
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"endpoint-http-path\"]",
      "header": "Endpoint Path",
      "body": "Change the path that this endpoint is listening on.",
      "teardown": {
        "action": "closeEditPane"
      }
    },
    {
      "type": "CyTooltip",
      "target": "c8e31b00-adf8-44c2-89ba-6df0e982805e",
      "header": "Running some code",
      "body": "A Code Block can contain code from any supported language, which is quite a few!",
      "teardown": {
        "action": "openBlockEditorPane"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"editorpane-edit-block\"]",
      "header": "Code Editor",
      "body": "Boilerplate code for each language is provided to get you started. It is important to note that the `blockInput` parameter in each language is set to the value that is passed into the block.",
      "config": {
        "placement": "top"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "button[data-tooltip-id=\"modify-libraries-button\"]",
      "header": "Import some libraries",
      "body": "As you write code in the editor and import libraries, you will have to also specify the libraries you wish to import here."
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"code-editor-language-selector\"]",
      "header": "Change your language",
      "body": "Every code block is essentially an isolated program, so you are able to change between languages throughout your project."
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"navitems-code-runner\"]",
      "header": "See how your code runs",
      "body": "Just as you would test your code on your computer, the **Code Runner** lets you test out your code before it is deployed.",
      "config": {
        "placement": "left"
      },
      "teardown": {
        "action": "openCodeRunner"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"input-data-textarea\"]",
      "header": "Passing data in",
      "body": "**Input Data** simulates data which is passed into this block and **Backpack Data** is data passed through the current execution context, or data that you will need later on in other blocks.",
      "teardown": {
        "action": "setCodeRunnerOutput",
        "options": {
          "logs": "asdf",
          "returned_data": "Hello World!"
        }
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"return-data-textarea\"]",
      "header": "Run and see your code's output",
      "body": "Once you have your block data set, you can click **Execute With Data** to actually run your code with the simulated inputs.",
      "teardown": {
        "action": "closeOpenPanes"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"navitems-deploy-project\"]",
      "header": "Let's trying deploying this project!",
      "body": "After testing all of our blocks with the code runner, we can try deploying this project to see how it actually works end to end!",
      "config": {
        "placement": "left"
      },
      "setup": {
        "action": "addDeploymentExecution",
        "options": {
          "executions": [
            {
              "blockIndex": 0,
              "status": "SUCCESS"
            }
          ]
        }
      },
      "teardown": {
        "action": "viewDeployment"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"navitems-block-executions\"]",
      "header": "Viewing your deployed code's logs",
      "body": "**Block Executions** will let you see every time your project is executed, what data is passed between your blocks and what they returned.",
      "teardown": {
        "action": "viewExecutionLogs",
        "options": {
          "backpack": {
            "test": "test"
          },
          "input_data": "input data",
          "name": "test name",
          "blockIndex": 0,
          "status": "SUCCESS",
          "program_output": "output",
          "return_data": "returned data"
        }
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "div[data-tooltip-id=\"editorpane-block-execution logs\"]",
      "header": "Deployment executions",
      "body": "Just like when looking at the **Code Runner** output, Deployment Executions shows the data that was passed in and returned by each block as it was executed.",
      "config": {
        "placement": "top"
      },
      "setup": {
        "action": "openExecutionsPane"
      }
    },
    {
      "type": "HTMLTooltip",
      "target": "li[data-tooltip-id=\"live-chat-link\"",
      "header": "What are you going to make?",
      "body": "We have come to the end of the developer workflow introduction. Want to learn more about what you can do with Refinery? [Go check out our docs](https://docs.refinery.io/getting-started/). You can also go back to the projects page to check out other examples of what you can do with Refinery. If you have any questions, let us know in the live chat or on Slack and we will help you out."
    }
  ],
  "name": "Dev Workflow Introduction",
  "workflow_relationships": [
    {
      "node": "02ce00f8-020c-4ea2-9f2e-b731491e4eea",
      "next": "c8e31b00-adf8-44c2-89ba-6df0e982805e",
      "type": "then",
      "name": "then",
      "expression": "",
      "id": "422abd51-f9ac-43b6-8771-cb5e9495c7de",
      "version": "1.0.0"
    },
    {
      "node": "c8e31b00-adf8-44c2-89ba-6df0e982805e",
      "next": "6436ed07-121b-4a74-af82-361cb70db5fc",
      "type": "then",
      "name": "then",
      "expression": "",
      "id": "549aaec4-c459-4fa4-b6a5-53cc5b8f29fb",
      "version": "1.0.0"
    }
  ],
  "workflow_states": [
    {
      "id": "6436ed07-121b-4a74-af82-361cb70db5fc",
      "name": "API Endpoint Response Block",
      "version": "1.0.0",
      "type": "api_gateway_response"
    },
    {
      "id": "02ce00f8-020c-4ea2-9f2e-b731491e4eea",
      "name": "API Endpoint Block",
      "version": "1.0.0",
      "type": "api_endpoint",
      "api_path": "/replaceme/proudcurtainsentry",
      "http_method": "GET"
    },
    {
      "id": "c8e31b00-adf8-44c2-89ba-6df0e982805e",
      "name": "Hello World Code Block",
      "version": "1.0.0",
      "type": "lambda",
      "language": "nodejs8.10",
      "code": "\nasync function main(blockInput, backpack) {\n    return 'Hello World!';\n}\n",
      "memory": 768,
      "libraries": [],
      "layers": [],
      "max_execution_time": 900,
      "environment_variables": {},
      "reserved_concurrency_count": false
    }
  ],
  "workflow_files": [],
  "workflow_file_links": [],
  "version": 1,
  "readme": "# Untitled Project README\n\nThis is a Refinery project README, update it to explain more about the project."
}