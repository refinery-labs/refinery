kind: Deployment
apiVersion: apps/v1
metadata:
  name: workflow-manager
  namespace: refinery
  labels:
    k8s-app: workflow-manager
  annotations:
    deployment.kubernetes.io/revision: '2'
    description: Manage Refinery workflows
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: workflow-manager
  template:
    metadata:
      name: workflow-manager
      labels:
        k8s-app: workflow-manager
      annotations:
        description: Manage Refinery workflows
    spec:
      containers:
        - name: workflow-manager
          image: {{ .Values.repositoryURI }}/{{ .Values.workflowManager.container.image }}{{- if .Values.workflowManager.container.digest }}{{- printf "@%s" .Values.workflowManager.container.digest }}{{- else }}{{- printf ":%s" .Values.workflowManager.container.tag }}{{- end }}
          imagePullPolicy: {{ .Values.workflowManager.container.imagePullPolicy }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: temporal-client-config
          securityContext:
            privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

