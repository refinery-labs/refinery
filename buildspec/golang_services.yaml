version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - apt update
      - apt install -y awscli git python3
      - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
      - chmod 700 get_helm.sh
      - ./get_helm.sh
  pre_build:
    commands:
      - mkdir ~/.kube/
      - cp helm/config-$ENV.yaml ~/.kube/config
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=134071937287.dkr.ecr.us-west-2.amazonaws.com
      - WORKFLOW_MANAGER_REPO=$REPOSITORY_URI/workflow-manager
      - WORKFLOW_MANAGER_WORKER_REPO=$REPOSITORY_URI/workflow-manager-worker
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - PREVIOUS_CWD=$(pwd)
      - echo Build started on `date`
      - echo Building the Refinery Workflow Manager Docker image...
      - cd ./golang/
      - docker build -t $WORKFLOW_MANAGER_REPO:latest -f docker/Dockerfile.workflow-manager .
      - docker tag $WORKFLOW_MANAGER_REPO:latest $WORKFLOW_MANAGER_REPO:$IMAGE_TAG
      - echo Building the Refinery Workflow Manager Worker Docker image...
      - docker build -t $WORKFLOW_MANAGER_WORKER_REPO:latest -f docker/Dockerfile.workflow-manager-worker .
      - docker tag $WORKFLOW_MANAGER_WORKER_REPO:latest $WORKFLOW_MANAGER_WORKER_REPO:$IMAGE_TAG
      - cd $PREVIOUS_CWD
  post_build:
    commands:
      - cd ./helm/refinery
      - echo Build completed on `date`
      - echo Pushing the Refinery Workflow Manager Docker image...
      - docker push $WORKFLOW_MANAGER_REPO:latest
      - docker push $WORKFLOW_MANAGER_REPO:$IMAGE_TAG
      - echo Pushing the Refinery Workflow Manager Worker Docker image...
      - docker push $WORKFLOW_MANAGER_WORKER_REPO:latest
      - docker push $WORKFLOW_MANAGER_WORKER_REPO:$IMAGE_TAG
      - |
        tee ./secrets.yaml <<END
        secrets:
          awsAccessKeyID: $REFINERYAWS_ACCESS_KEY_ID
          awsSecretAccessKey: $REFINERY_AWS_SECRET_ACCESS_KEY
          serviceSharedSecret: $SERVICE_SHARED_SECRET
          mailgunApiKey: $MAILGUN_API_KEY
          cookieSecretValue: $COOKIE_SECRET_VALUE
          stripeApiKey: $STRIPE_API_KEY
          intercomHMACSecret: $INTERCOM_HMAC_SECRET
          githubClientID: $GITHUB_CLIENT_ID
          githubClientSecret: $GITHUB_CLIENT_SECRET
          ngrokApiSecret: $NGROK_API_SECRET

        aws:
          accountID: "$REFINERY_AWS_ACCOUNT_ID"

        postgresql:
          postgresqlPassword: $POSTGRESQL_PASSWORD
        END
      - helm dependencies update
      - |
        helm upgrade \
        --namespace refinery \
        -f ./values.$ENV.yaml \
        -f ./secrets.yaml \
        --set workflowManager.container.tag=$IMAGE_TAG \
        --set workflowMangaerWorker.container.tag=$IMAGE_TAG \
        refinery .
